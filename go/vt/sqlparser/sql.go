// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const LEX_ERROR = 57351
const UNION = 57352
const SELECT = 57353
const STREAM = 57354
const VSTREAM = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const ORDER = 57363
const BY = 57364
const LIMIT = 57365
const OFFSET = 57366
const FOR = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const ALL = 57382
const ANY = 57383
const SOME = 57384
const DISTINCTROW = 57385
const PARSER = 57386
const GENERATED = 57387
const ALWAYS = 57388
const OUTFILE = 57389
const S3 = 57390
const DATA = 57391
const LOAD = 57392
const LINES = 57393
const TERMINATED = 57394
const ESCAPED = 57395
const ENCLOSED = 57396
const DUMPFILE = 57397
const CSV = 57398
const HEADER = 57399
const MANIFEST = 57400
const OVERWRITE = 57401
const STARTING = 57402
const OPTIONALLY = 57403
const VALUES = 57404
const LAST_INSERT_ID = 57405
const NEXT = 57406
const VALUE = 57407
const SHARE = 57408
const MODE = 57409
const SQL_NO_CACHE = 57410
const SQL_CACHE = 57411
const SQL_CALC_FOUND_ROWS = 57412
const SQL_SMALL_RESULT = 57413
const SQL_BIG_RESULT = 57414
const SQL_BUFFER_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const ID = 57438
const AT_ID = 57439
const AT_AT_ID = 57440
const HEX = 57441
const NCHAR_STRING = 57442
const INTEGRAL = 57443
const FLOAT = 57444
const DECIMAL = 57445
const HEXNUM = 57446
const COMMENT = 57447
const COMMENT_KEYWORD = 57448
const BITNUM = 57449
const BIT_LITERAL = 57450
const COMPRESSION = 57451
const VALUE_ARG = 57452
const LIST_ARG = 57453
const OFFSET_ARG = 57454
const JSON_PRETTY = 57455
const JSON_STORAGE_SIZE = 57456
const JSON_STORAGE_FREE = 57457
const JSON_CONTAINS = 57458
const JSON_CONTAINS_PATH = 57459
const JSON_EXTRACT = 57460
const JSON_KEYS = 57461
const JSON_OVERLAPS = 57462
const JSON_SEARCH = 57463
const JSON_VALUE = 57464
const JSON_ARRAYAGG = 57465
const JSON_OBJECTAGG = 57466
const EXTRACT = 57467
const NULL = 57468
const UNKNOWN = 57469
const TRUE = 57470
const FALSE = 57471
const OFF = 57472
const DISCARD = 57473
const IMPORT = 57474
const ENABLE = 57475
const DISABLE = 57476
const TABLESPACE = 57477
const VIRTUAL = 57478
const STORED = 57479
const BOTH = 57480
const LEADING = 57481
const TRAILING = 57482
const KILL = 57483
const EMPTY_FROM_CLAUSE = 57484
const LOWER_THAN_CHARSET = 57485
const CHARSET = 57486
const UNIQUE = 57487
const KEY = 57488
const EXPRESSION_PREC_SETTER = 57489
const OR = 57490
const XOR = 57491
const AND = 57492
const NOT = 57493
const BETWEEN = 57494
const CASE = 57495
const WHEN = 57496
const THEN = 57497
const ELSE = 57498
const END = 57499
const LE = 57500
const GE = 57501
const NE = 57502
const NULL_SAFE_EQUAL = 57503
const IS = 57504
const LIKE = 57505
const REGEXP = 57506
const RLIKE = 57507
const IN = 57508
const ASSIGNMENT_OPT = 57509
const SHIFT_LEFT = 57510
const SHIFT_RIGHT = 57511
const DIV = 57512
const MOD = 57513
const UNARY = 57514
const COLLATE = 57515
const BINARY = 57516
const UNDERSCORE_ARMSCII8 = 57517
const UNDERSCORE_ASCII = 57518
const UNDERSCORE_BIG5 = 57519
const UNDERSCORE_BINARY = 57520
const UNDERSCORE_CP1250 = 57521
const UNDERSCORE_CP1251 = 57522
const UNDERSCORE_CP1256 = 57523
const UNDERSCORE_CP1257 = 57524
const UNDERSCORE_CP850 = 57525
const UNDERSCORE_CP852 = 57526
const UNDERSCORE_CP866 = 57527
const UNDERSCORE_CP932 = 57528
const UNDERSCORE_DEC8 = 57529
const UNDERSCORE_EUCJPMS = 57530
const UNDERSCORE_EUCKR = 57531
const UNDERSCORE_GB18030 = 57532
const UNDERSCORE_GB2312 = 57533
const UNDERSCORE_GBK = 57534
const UNDERSCORE_GEOSTD8 = 57535
const UNDERSCORE_GREEK = 57536
const UNDERSCORE_HEBREW = 57537
const UNDERSCORE_HP8 = 57538
const UNDERSCORE_KEYBCS2 = 57539
const UNDERSCORE_KOI8R = 57540
const UNDERSCORE_KOI8U = 57541
const UNDERSCORE_LATIN1 = 57542
const UNDERSCORE_LATIN2 = 57543
const UNDERSCORE_LATIN5 = 57544
const UNDERSCORE_LATIN7 = 57545
const UNDERSCORE_MACCE = 57546
const UNDERSCORE_MACROMAN = 57547
const UNDERSCORE_SJIS = 57548
const UNDERSCORE_SWE7 = 57549
const UNDERSCORE_TIS620 = 57550
const UNDERSCORE_UCS2 = 57551
const UNDERSCORE_UJIS = 57552
const UNDERSCORE_UTF16 = 57553
const UNDERSCORE_UTF16LE = 57554
const UNDERSCORE_UTF32 = 57555
const UNDERSCORE_UTF8 = 57556
const UNDERSCORE_UTF8MB4 = 57557
const UNDERSCORE_UTF8MB3 = 57558
const INTERVAL = 57559
const WINDOW_EXPR = 57560
const JSON_EXTRACT_OP = 57561
const JSON_UNQUOTE_EXTRACT_OP = 57562
const CREATE = 57563
const ALTER = 57564
const DROP = 57565
const RENAME = 57566
const ANALYZE = 57567
const ADD = 57568
const FLUSH = 57569
const CHANGE = 57570
const MODIFY = 57571
const DEALLOCATE = 57572
const REVERT = 57573
const QUERIES = 57574
const SCHEMA = 57575
const TABLE = 57576
const INDEX = 57577
const VIEW = 57578
const TO = 57579
const IGNORE = 57580
const IF = 57581
const PRIMARY = 57582
const COLUMN = 57583
const SPATIAL = 57584
const FULLTEXT = 57585
const KEY_BLOCK_SIZE = 57586
const CHECK = 57587
const INDEXES = 57588
const ACTION = 57589
const CASCADE = 57590
const CONSTRAINT = 57591
const FOREIGN = 57592
const NO = 57593
const REFERENCES = 57594
const RESTRICT = 57595
const SHOW = 57596
const DESCRIBE = 57597
const EXPLAIN = 57598
const DATE = 57599
const ESCAPE = 57600
const REPAIR = 57601
const OPTIMIZE = 57602
const TRUNCATE = 57603
const COALESCE = 57604
const EXCHANGE = 57605
const REBUILD = 57606
const PARTITIONING = 57607
const REMOVE = 57608
const PREPARE = 57609
const EXECUTE = 57610
const MAXVALUE = 57611
const PARTITION = 57612
const REORGANIZE = 57613
const LESS = 57614
const THAN = 57615
const PROCEDURE = 57616
const TRIGGER = 57617
const VINDEX = 57618
const VINDEXES = 57619
const DIRECTORY = 57620
const NAME = 57621
const UPGRADE = 57622
const STATUS = 57623
const VARIABLES = 57624
const WARNINGS = 57625
const CASCADED = 57626
const DEFINER = 57627
const OPTION = 57628
const SQL = 57629
const UNDEFINED = 57630
const SEQUENCE = 57631
const MERGE = 57632
const TEMPORARY = 57633
const TEMPTABLE = 57634
const INVOKER = 57635
const SECURITY = 57636
const FIRST = 57637
const AFTER = 57638
const LAST = 57639
const VITESS_MIGRATION = 57640
const CANCEL = 57641
const RETRY = 57642
const LAUNCH = 57643
const COMPLETE = 57644
const CLEANUP = 57645
const THROTTLE = 57646
const UNTHROTTLE = 57647
const FORCE_CUTOVER = 57648
const EXPIRE = 57649
const RATIO = 57650
const VITESS_THROTTLER = 57651
const BEGIN = 57652
const START = 57653
const TRANSACTION = 57654
const COMMIT = 57655
const ROLLBACK = 57656
const SAVEPOINT = 57657
const RELEASE = 57658
const WORK = 57659
const CONSISTENT = 57660
const SNAPSHOT = 57661
const BIT = 57662
const TINYINT = 57663
const SMALLINT = 57664
const MEDIUMINT = 57665
const INT = 57666
const INTEGER = 57667
const BIGINT = 57668
const INTNUM = 57669
const REAL = 57670
const DOUBLE = 57671
const FLOAT_TYPE = 57672
const FLOAT4_TYPE = 57673
const FLOAT8_TYPE = 57674
const DECIMAL_TYPE = 57675
const NUMERIC = 57676
const TIME = 57677
const TIMESTAMP = 57678
const DATETIME = 57679
const YEAR = 57680
const CHAR = 57681
const VARCHAR = 57682
const BOOL = 57683
const CHARACTER = 57684
const VARBINARY = 57685
const NCHAR = 57686
const TEXT = 57687
const TINYTEXT = 57688
const MEDIUMTEXT = 57689
const LONGTEXT = 57690
const BLOB = 57691
const TINYBLOB = 57692
const MEDIUMBLOB = 57693
const LONGBLOB = 57694
const JSON = 57695
const JSON_SCHEMA_VALID = 57696
const JSON_SCHEMA_VALIDATION_REPORT = 57697
const ENUM = 57698
const GEOMETRY = 57699
const POINT = 57700
const LINESTRING = 57701
const POLYGON = 57702
const GEOMCOLLECTION = 57703
const GEOMETRYCOLLECTION = 57704
const MULTIPOINT = 57705
const MULTILINESTRING = 57706
const MULTIPOLYGON = 57707
const ASCII = 57708
const UNICODE = 57709
const NULLX = 57710
const AUTO_INCREMENT = 57711
const APPROXNUM = 57712
const SIGNED = 57713
const UNSIGNED = 57714
const ZEROFILL = 57715
const PURGE = 57716
const BEFORE = 57717
const CODE = 57718
const COLLATION = 57719
const COLUMNS = 57720
const DATABASES = 57721
const ENGINES = 57722
const EVENT = 57723
const EXTENDED = 57724
const FIELDS = 57725
const FULL = 57726
const FUNCTION = 57727
const GTID_EXECUTED = 57728
const KEYSPACES = 57729
const OPEN = 57730
const PLUGINS = 57731
const PRIVILEGES = 57732
const PROCESSLIST = 57733
const SCHEMAS = 57734
const TABLES = 57735
const TRIGGERS = 57736
const USER = 57737
const VGTID_EXECUTED = 57738
const VITESS_KEYSPACES = 57739
const VITESS_METADATA = 57740
const VITESS_MIGRATIONS = 57741
const VITESS_REPLICATION_STATUS = 57742
const VITESS_SHARDS = 57743
const VITESS_TABLETS = 57744
const VITESS_TARGET = 57745
const VSCHEMA = 57746
const VITESS_THROTTLED_APPS = 57747
const NAMES = 57748
const GLOBAL = 57749
const SESSION = 57750
const ISOLATION = 57751
const LEVEL = 57752
const READ = 57753
const WRITE = 57754
const ONLY = 57755
const REPEATABLE = 57756
const COMMITTED = 57757
const UNCOMMITTED = 57758
const SERIALIZABLE = 57759
const ADDDATE = 57760
const CURRENT_TIMESTAMP = 57761
const DATABASE = 57762
const CURRENT_DATE = 57763
const CURDATE = 57764
const DATE_ADD = 57765
const DATE_SUB = 57766
const NOW = 57767
const SUBDATE = 57768
const CURTIME = 57769
const CURRENT_TIME = 57770
const LOCALTIME = 57771
const LOCALTIMESTAMP = 57772
const CURRENT_USER = 57773
const UTC_DATE = 57774
const UTC_TIME = 57775
const UTC_TIMESTAMP = 57776
const SYSDATE = 57777
const DAY = 57778
const DAY_HOUR = 57779
const DAY_MICROSECOND = 57780
const DAY_MINUTE = 57781
const DAY_SECOND = 57782
const HOUR = 57783
const HOUR_MICROSECOND = 57784
const HOUR_MINUTE = 57785
const HOUR_SECOND = 57786
const MICROSECOND = 57787
const MINUTE = 57788
const MINUTE_MICROSECOND = 57789
const MINUTE_SECOND = 57790
const MONTH = 57791
const QUARTER = 57792
const SECOND = 57793
const SECOND_MICROSECOND = 57794
const YEAR_MONTH = 57795
const WEEK = 57796
const SQL_TSI_DAY = 57797
const SQL_TSI_WEEK = 57798
const SQL_TSI_HOUR = 57799
const SQL_TSI_MINUTE = 57800
const SQL_TSI_MONTH = 57801
const SQL_TSI_QUARTER = 57802
const SQL_TSI_SECOND = 57803
const SQL_TSI_MICROSECOND = 57804
const SQL_TSI_YEAR = 57805
const REPLACE = 57806
const CONVERT = 57807
const CAST = 57808
const SUBSTR = 57809
const SUBSTRING = 57810
const MID = 57811
const SEPARATOR = 57812
const TIMESTAMPADD = 57813
const TIMESTAMPDIFF = 57814
const WEIGHT_STRING = 57815
const LTRIM = 57816
const RTRIM = 57817
const TRIM = 57818
const JSON_ARRAY = 57819
const JSON_OBJECT = 57820
const JSON_QUOTE = 57821
const JSON_DEPTH = 57822
const JSON_TYPE = 57823
const JSON_LENGTH = 57824
const JSON_VALID = 57825
const JSON_ARRAY_APPEND = 57826
const JSON_ARRAY_INSERT = 57827
const JSON_INSERT = 57828
const JSON_MERGE = 57829
const JSON_MERGE_PATCH = 57830
const JSON_MERGE_PRESERVE = 57831
const JSON_REMOVE = 57832
const JSON_REPLACE = 57833
const JSON_SET = 57834
const JSON_UNQUOTE = 57835
const COUNT = 57836
const AVG = 57837
const MAX = 57838
const MIN = 57839
const SUM = 57840
const GROUP_CONCAT = 57841
const BIT_AND = 57842
const BIT_OR = 57843
const BIT_XOR = 57844
const STD = 57845
const STDDEV = 57846
const STDDEV_POP = 57847
const STDDEV_SAMP = 57848
const VAR_POP = 57849
const VAR_SAMP = 57850
const VARIANCE = 57851
const ANY_VALUE = 57852
const REGEXP_INSTR = 57853
const REGEXP_LIKE = 57854
const REGEXP_REPLACE = 57855
const REGEXP_SUBSTR = 57856
const ExtractValue = 57857
const UpdateXML = 57858
const GET_LOCK = 57859
const RELEASE_LOCK = 57860
const RELEASE_ALL_LOCKS = 57861
const IS_FREE_LOCK = 57862
const IS_USED_LOCK = 57863
const LOCATE = 57864
const POSITION = 57865
const ST_GeometryCollectionFromText = 57866
const ST_GeometryFromText = 57867
const ST_LineStringFromText = 57868
const ST_MultiLineStringFromText = 57869
const ST_MultiPointFromText = 57870
const ST_MultiPolygonFromText = 57871
const ST_PointFromText = 57872
const ST_PolygonFromText = 57873
const ST_GeometryCollectionFromWKB = 57874
const ST_GeometryFromWKB = 57875
const ST_LineStringFromWKB = 57876
const ST_MultiLineStringFromWKB = 57877
const ST_MultiPointFromWKB = 57878
const ST_MultiPolygonFromWKB = 57879
const ST_PointFromWKB = 57880
const ST_PolygonFromWKB = 57881
const ST_AsBinary = 57882
const ST_AsText = 57883
const ST_Dimension = 57884
const ST_Envelope = 57885
const ST_IsSimple = 57886
const ST_IsEmpty = 57887
const ST_GeometryType = 57888
const ST_X = 57889
const ST_Y = 57890
const ST_Latitude = 57891
const ST_Longitude = 57892
const ST_EndPoint = 57893
const ST_IsClosed = 57894
const ST_Length = 57895
const ST_NumPoints = 57896
const ST_StartPoint = 57897
const ST_PointN = 57898
const ST_Area = 57899
const ST_Centroid = 57900
const ST_ExteriorRing = 57901
const ST_InteriorRingN = 57902
const ST_NumInteriorRings = 57903
const ST_NumGeometries = 57904
const ST_GeometryN = 57905
const ST_LongFromGeoHash = 57906
const ST_PointFromGeoHash = 57907
const ST_LatFromGeoHash = 57908
const ST_GeoHash = 57909
const ST_AsGeoJSON = 57910
const ST_GeomFromGeoJSON = 57911
const MATCH = 57912
const AGAINST = 57913
const BOOLEAN = 57914
const LANGUAGE = 57915
const WITH = 57916
const QUERY = 57917
const EXPANSION = 57918
const WITHOUT = 57919
const VALIDATION = 57920
const ROLLUP = 57921
const UNUSED = 57922
const ARRAY = 57923
const BYTE = 57924
const CUME_DIST = 57925
const DESCRIPTION = 57926
const DENSE_RANK = 57927
const EMPTY = 57928
const EXCEPT = 57929
const FIRST_VALUE = 57930
const GROUPING = 57931
const GROUPS = 57932
const JSON_TABLE = 57933
const LAG = 57934
const LAST_VALUE = 57935
const LATERAL = 57936
const LEAD = 57937
const NTH_VALUE = 57938
const NTILE = 57939
const OF = 57940
const OVER = 57941
const PERCENT_RANK = 57942
const RANK = 57943
const RECURSIVE = 57944
const ROW_NUMBER = 57945
const SYSTEM = 57946
const WINDOW = 57947
const ACTIVE = 57948
const ADMIN = 57949
const AUTOEXTEND_SIZE = 57950
const BUCKETS = 57951
const CLONE = 57952
const COLUMN_FORMAT = 57953
const COMPONENT = 57954
const DEFINITION = 57955
const ENFORCED = 57956
const ENGINE_ATTRIBUTE = 57957
const EXCLUDE = 57958
const FOLLOWING = 57959
const GET_MASTER_PUBLIC_KEY = 57960
const HISTOGRAM = 57961
const HISTORY = 57962
const INACTIVE = 57963
const INVISIBLE = 57964
const LOCKED = 57965
const MASTER_COMPRESSION_ALGORITHMS = 57966
const MASTER_PUBLIC_KEY_PATH = 57967
const MASTER_TLS_CIPHERSUITES = 57968
const MASTER_ZSTD_COMPRESSION_LEVEL = 57969
const NESTED = 57970
const NETWORK_NAMESPACE = 57971
const NOWAIT = 57972
const NULLS = 57973
const OJ = 57974
const OLD = 57975
const OPTIONAL = 57976
const ORDINALITY = 57977
const ORGANIZATION = 57978
const OTHERS = 57979
const PARTIAL = 57980
const PATH = 57981
const PERSIST = 57982
const PERSIST_ONLY = 57983
const PRECEDING = 57984
const PRIVILEGE_CHECKS_USER = 57985
const PROCESS = 57986
const RANDOM = 57987
const REFERENCE = 57988
const REQUIRE_ROW_FORMAT = 57989
const RESOURCE = 57990
const RESPECT = 57991
const RESTART = 57992
const RETAIN = 57993
const REUSE = 57994
const ROLE = 57995
const SECONDARY = 57996
const SECONDARY_ENGINE = 57997
const SECONDARY_ENGINE_ATTRIBUTE = 57998
const SECONDARY_LOAD = 57999
const SECONDARY_UNLOAD = 58000
const SIMPLE = 58001
const SKIP = 58002
const SRID = 58003
const THREAD_PRIORITY = 58004
const TIES = 58005
const UNBOUNDED = 58006
const VCPU = 58007
const VISIBLE = 58008
const RETURNING = 58009
const FORMAT_BYTES = 58010
const FORMAT_PICO_TIME = 58011
const PS_CURRENT_THREAD_ID = 58012
const PS_THREAD_ID = 58013
const GTID_SUBSET = 58014
const GTID_SUBTRACT = 58015
const WAIT_FOR_EXECUTED_GTID_SET = 58016
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58017
const FORMAT = 58018
const TREE = 58019
const VITESS = 58020
const TRADITIONAL = 58021
const VTEXPLAIN = 58022
const VEXPLAIN = 58023
const PLAN = 58024
const LOCAL = 58025
const LOW_PRIORITY = 58026
const NO_WRITE_TO_BINLOG = 58027
const LOGS = 58028
const ERROR = 58029
const GENERAL = 58030
const HOSTS = 58031
const OPTIMIZER_COSTS = 58032
const USER_RESOURCES = 58033
const SLOW = 58034
const CHANNEL = 58035
const RELAY = 58036
const EXPORT = 58037
const CURRENT = 58038
const ROW = 58039
const ROWS = 58040
const AVG_ROW_LENGTH = 58041
const CONNECTION = 58042
const CHECKSUM = 58043
const DELAY_KEY_WRITE = 58044
const ENCRYPTION = 58045
const ENGINE = 58046
const INSERT_METHOD = 58047
const MAX_ROWS = 58048
const MIN_ROWS = 58049
const PACK_KEYS = 58050
const PASSWORD = 58051
const FIXED = 58052
const DYNAMIC = 58053
const COMPRESSED = 58054
const REDUNDANT = 58055
const COMPACT = 58056
const ROW_FORMAT = 58057
const STATS_AUTO_RECALC = 58058
const STATS_PERSISTENT = 58059
const STATS_SAMPLE_PAGES = 58060
const STORAGE = 58061
const MEMORY = 58062
const DISK = 58063
const PARTITIONS = 58064
const LINEAR = 58065
const RANGE = 58066
const LIST = 58067
const SUBPARTITION = 58068
const SUBPARTITIONS = 58069
const HASH = 58070

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	15, 49,
	16, 49,
	-2, 40,
	-1, 52,
	1, 157,
	746, 157,
	-2, 165,
	-1, 53,
	147, 165,
	189, 165,
	359, 165,
	-2, 523,
	-1, 61,
	37, 777,
	252, 777,
	263, 777,
	298, 791,
	299, 791,
	-2, 779,
	-1, 66,
	254, 815,
	-2, 813,
	-1, 122,
	251, 1612,
	-2, 131,
	-1, 124,
	1, 158,
	746, 158,
	-2, 165,
	-1, 135,
	148, 408,
	257, 408,
	-2, 512,
	-1, 154,
	147, 165,
	189, 165,
	359, 165,
	-2, 532,
	-1, 742,
	175, 41,
	-2, 43,
	-1, 951,
	95, 1629,
	-2, 1473,
	-1, 952,
	95, 1630,
	234, 1634,
	-2, 1474,
	-1, 953,
	234, 1633,
	-2, 42,
	-1, 1037,
	64, 887,
	-2, 900,
	-1, 1125,
	262, 1100,
	267, 1100,
	-2, 419,
	-1, 1210,
	1, 580,
	746, 580,
	-2, 165,
	-1, 1517,
	234, 1634,
	-2, 1474,
	-1, 1730,
	64, 888,
	-2, 904,
	-1, 1731,
	64, 889,
	-2, 905,
	-1, 1791,
	147, 165,
	189, 165,
	359, 165,
	-2, 458,
	-1, 1872,
	148, 408,
	257, 408,
	-2, 512,
	-1, 1881,
	262, 1101,
	267, 1101,
	-2, 420,
	-1, 2326,
	234, 1638,
	-2, 1632,
	-1, 2327,
	234, 1634,
	-2, 1630,
	-1, 2430,
	147, 165,
	189, 165,
	359, 165,
	-2, 459,
	-1, 2437,
	27, 186,
	-2, 188,
	-1, 2896,
	86, 96,
	96, 96,
	-2, 967,
	-1, 2965,
	721, 700,
	-2, 674,
	-1, 3189,
	54, 1577,
	-2, 1571,
	-1, 4027,
	721, 700,
	-2, 688,
	-1, 4119,
	98, 632,
	103, 632,
	113, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	226, 632,
	227, 632,
	228, 632,
	229, 632,
	230, 632,
	231, 632,
	232, 632,
	-2, 2009,
}

const yyPrivate = 57344

const yyLast = 56789

var yyAct = [...]int{
	967, 3678, 962, 87, 3679, 4008, 3677, 955, 4098, 4207,
	4117, 4194, 2355, 3990, 3341, 4086, 2131, 3627, 4161, 954,
	2119, 4162, 3241, 2427, 3248, 3290, 1276, 3202, 3913, 3988,
	3614, 3477, 920, 3299, 3055, 42, 3304, 3301, 3300, 3298,
	3303, 1794, 3302, 2357, 3319, 3140, 2501, 1278, 2001, 3256,
	3318, 746, 3206, 3203, 2057, 3523, 3517, 5, 3029, 3720,
	3054, 2856, 740, 2382, 3200, 916, 3190, 774, 3507, 741,
	915, 2464, 2930, 1850, 3011, 3321, 2962, 2489, 4059, 3348,
	2469, 1087, 2931, 2532, 2932, 2415, 1035, 163, 87, 1055,
	2398, 1750, 1032, 2401, 2881, 2402, 43, 41, 1897, 2862,
	2403, 2848, 1062, 3003, 2832, 1157, 3545, 1035, 2278, 2279,
	2115, 2153, 2510, 2488, 1879, 149, 2065, 2390, 1034, 2471,
	1038, 2311, 1097, 2549, 1120, 2923, 1115, 2898, 1783, 1763,
	2405, 1711, 104, 100, 1530, 105, 2090, 2159, 2079, 1057,
	1455, 1440, 2869, 1997, 1886, 1094, 756, 2486, 1091, 1095,
	3205, 1126, 1978, 2460, 1121, 1122, 1782, 1072, 1768, 1074,
	1123, 751, 1133, 1044, 1733, 3715, 744, 2830, 2186, 2461,
	1489, 1041, 2056, 2167, 85, 1266, 107, 1513, 2009, 167,
	3707, 2383, 127, 1054, 1040, 1039, 125, 126, 743, 3478,
	132, 1871, 133, 1042, 1206, 917, 1067, 1030, 93, 99,
	750, 1534, 98, 4195, 3615, 3534, 733, 3287, 1252, 4043,
	2503, 1539, 2503, 2504, 2505, 1066, 84, 2985, 2984, 1456,
	1274, 106, 2953, 2547, 3607, 4144, 3019, 1029, 3020, 4038,
	4039, 2072, 128, 1047, 2071, 4044, 2352, 2353, 2070, 3570,
	2069, 2068, 1162, 678, 1088, 134, 3682, 2067, 2040, 1222,
	675, 2828, 676, 2597, 3186, 4217, 2858, 1159, 3144, 4138,
	4160, 4185, 3481, 1963, 4165, 3682, 3480, 2379, 2378, 2534,
	1176, 1177, 1178, 2978, 1181, 1182, 1183, 1184, 1081, 734,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1136, 1082, 1137,
	1048, 2536, 1033, 2793, 128, 1056, 1031, 1111, 2, 3309,
	1112, 1110, 1109, 1472, 4017, 1451, 1163, 1166, 1167, 1223,
	2955, 1170, 4200, 1104, 1099, 3991, 718, 1466, 1754, 1744,
	4039, 4148, 1752, 712, 718, 95, 2077, 3309, 3367, 2376,
	4146, 4113, 3681, 3909, 3908, 2535, 1161, 4199, 1160, 1179,
	3306, 921, 1028, 111, 112, 113, 4147, 116, 1755, 4175,
	122, 3681, 1753, 191, 3919, 4145, 670, 95, 95, 3307,
	190, 3620, 128, 4142, 3621, 1113, 3639, 3628, 731, 732,
	1442, 4087, 712, 95, 4095, 2529, 3918, 2093, 1023, 1024,
	1025, 1026, 2124, 129, 4122, 1037, 3393, 3307, 3313, 970,
	971, 972, 1860, 2829, 970, 971, 972, 2604, 2975, 172,
	1784, 3638, 1785, 1468, 3238, 3239, 3237, 1080, 1084, 919,
	2992, 2993, 3018, 1069, 1070, 709, 3313, 1080, 1084, 919,
	1103, 2421, 1108, 1105, 1215, 1216, 1462, 86, 2601, 1454,
	2907, 86, 3002, 2906, 2422, 2423, 2908, 86, 1242, 1456,
	2049, 2050, 4099, 1021, 1247, 1248, 2912, 1271, 1020, 1259,
	1469, 1261, 1470, 1471, 2872, 712, 1218, 4009, 1243, 169,
	1236, 1230, 170, 694, 1230, 712, 1231, 2005, 2602, 1231,
	2919, 3345, 86, 2440, 2439, 88, 692, 1229, 3734, 1228,
	1106, 3343, 2873, 2865, 2866, 3076, 3375, 3373, 189, 1258,
	1260, 712, 712, 2595, 2480, 3349, 2052, 730, 2048, 2354,
	726, 712, 3310, 724, 1780, 1205, 4127, 3004, 4166, 1715,
	2963, 95, 2511, 2988, 1452, 95, 689, 2474, 4103, 2550,
	2554, 95, 1108, 4103, 1100, 704, 4125, 2556, 1979, 4167,
	3310, 1102, 1101, 1441, 1180, 713, 4131, 4132, 4197, 3961,
	699, 3962, 3336, 1263, 2386, 3258, 3259, 1466, 4022, 1249,
	3337, 702, 4126, 1244, 1268, 1237, 95, 1270, 1251, 1250,
	1953, 1490, 2553, 1269, 3346, 1211, 2573, 2598, 2574, 2599,
	2575, 1245, 1246, 2195, 3344, 2555, 3006, 3609, 3608, 2576,
	1106, 1186, 2557, 3364, 713, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1499, 1498, 1500, 1501, 1256, 1185, 2552, 3893,
	1257, 2514, 173, 1135, 1954, 2006, 1955, 3686, 1116, 1107,
	1262, 179, 1117, 2399, 3605, 1117, 1146, 1155, 1154, 679,
	1153, 681, 695, 1152, 715, 1151, 714, 685, 1150, 683,
	687, 696, 688, 1149, 682, 1255, 693, 1073, 1148, 684,
	697, 698, 701, 705, 706, 707, 703, 700, 4139, 691,
	716, 3077, 1718, 1143, 3257, 1864, 1462, 1156, 1504, 3143,
	1504, 3260, 4172, 3520, 1092, 1092, 3260, 713, 1090, 2473,
	1129, 2187, 2956, 1165, 4218, 1092, 2189, 713, 1998, 1128,
	2194, 2190, 1128, 1164, 2191, 2192, 2193, 2487, 1068, 2188,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 1275,
	3007, 1275, 1275, 713, 713, 2540, 1134, 2539, 3280, 1107,
	1994, 1443, 1173, 713, 2563, 2559, 2561, 2562, 2560, 2564,
	2565, 2566, 1461, 1458, 1459, 1460, 1465, 1467, 1464, 3604,
	1463, 1083, 1077, 1075, 1781, 2533, 164, 2384, 2385, 2987,
	1457, 1083, 1077, 1075, 3023, 1858, 2619, 3171, 1857, 1035,
	1514, 1519, 1520, 1856, 1523, 1525, 1526, 1527, 1528, 1529,
	2990, 1532, 1533, 1535, 1535, 1147, 1535, 1535, 1540, 1540,
	1540, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1511, 1114, 1264, 4062, 1667,
	4016, 1669, 1670, 1671, 1672, 1673, 2954, 3680, 3637, 1507,
	1508, 1509, 1510, 1540, 1540, 1540, 1540, 1540, 1540, 1521,
	1433, 1434, 1435, 3568, 3569, 717, 3680, 1227, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 89, 1524, 968, 1515, 710, 1965, 1964, 1966,
	1967, 1968, 1461, 1458, 1459, 1460, 1465, 1467, 1464, 1708,
	1463, 711, 712, 2603, 1450, 1536, 4101, 1537, 1538, 3521,
	1457, 4101, 2957, 3311, 3312, 165, 968, 968, 1209, 1240,
	1541, 1542, 177, 3465, 1217, 1214, 3315, 1135, 4211, 1226,
	1705, 1232, 1233, 1234, 1235, 2151, 1144, 2973, 4100, 2477,
	3365, 3311, 3312, 4100, 2977, 2386, 2602, 94, 1076, 3010,
	1135, 94, 1995, 1714, 3315, 1272, 1273, 94, 1076, 1854,
	190, 1885, 1035, 185, 2833, 2835, 1035, 1221, 669, 2531,
	1743, 3001, 1035, 1135, 3000, 1983, 4130, 4140, 1172, 3152,
	2478, 1505, 1506, 129, 4004, 3559, 1135, 2476, 2976, 2863,
	3541, 2903, 94, 2868, 1722, 1706, 2805, 2127, 1726, 172,
	1772, 1668, 1220, 3151, 1034, 677, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 1501, 2428, 124,
	4129, 2479, 184, 186, 187, 188, 3236, 1504, 2630, 1253,
	1134, 2475, 1484, 2143, 2132, 2133, 2134, 2135, 2145, 2136,
	2137, 2138, 2150, 2146, 2139, 2140, 2147, 2148, 2149, 2141,
	2142, 2144, 1051, 1134, 1724, 1225, 119, 1725, 104, 169,
	1744, 105, 170, 1706, 1674, 1675, 1676, 1677, 1678, 1679,
	1884, 3169, 2010, 1267, 4030, 1158, 1134, 1984, 1108, 1204,
	3600, 1712, 1128, 1131, 1132, 1145, 1092, 3050, 189, 1134,
	1125, 1129, 3533, 1699, 1138, 1128, 2168, 2551, 2160, 1140,
	1135, 2061, 107, 1141, 1139, 1496, 1497, 1499, 1498, 1500,
	1501, 1124, 1991, 2169, 713, 3013, 3030, 1135, 3013, 1786,
	3012, 2528, 2946, 3012, 1142, 2160, 4176, 2639, 1980, 1135,
	1981, 1471, 120, 1982, 1239, 1877, 2834, 3244, 2384, 2385,
	1470, 1471, 2630, 1208, 1720, 1241, 3729, 3575, 1861, 1862,
	1863, 3574, 2518, 1894, 1893, 1883, 1709, 2526, 1146, 4209,
	1721, 1723, 4210, 1948, 4208, 1870, 1144, 1749, 4219, 1746,
	4063, 4168, 1899, 3560, 1900, 2530, 1902, 1904, 1889, 1930,
	1908, 1910, 1912, 1914, 1916, 1031, 1254, 1046, 1033, 3245,
	1472, 4213, 3634, 1275, 3635, 1472, 1777, 1778, 2003, 2154,
	3032, 2523, 173, 1134, 3901, 1171, 1472, 1888, 1224, 1168,
	1845, 179, 1210, 3247, 2523, 1938, 1939, 3900, 4064, 2676,
	1134, 1944, 1945, 1853, 1887, 1887, 1128, 1131, 1132, 2011,
	1092, 2316, 1134, 3242, 1125, 1129, 1472, 1138, 1128, 1868,
	1867, 1866, 1140, 2527, 1472, 1880, 1141, 1139, 1744, 1207,
	1973, 2166, 3258, 3259, 3891, 2165, 2525, 3382, 3651, 3243,
	3650, 3582, 1891, 1971, 4220, 1107, 970, 971, 972, 2391,
	2392, 3042, 3041, 3040, 736, 1727, 3034, 3996, 3038, 1490,
	3033, 3022, 3031, 1472, 3581, 1934, 3571, 3036, 1744, 1926,
	3340, 1999, 1929, 3249, 1931, 1987, 3035, 1985, 1986, 1744,
	1988, 1989, 1990, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1499, 1498, 1500, 1501, 3037, 3039, 2095, 3288, 3276, 2928,
	128, 1972, 1472, 1111, 2927, 3997, 1960, 1110, 1109, 1744,
	2096, 1502, 1503, 2094, 1970, 2926, 164, 1469, 2483, 1470,
	1471, 1974, 1469, 1859, 1470, 1471, 3052, 2016, 2083, 2084,
	2081, 2082, 1958, 1469, 2921, 1470, 1471, 2083, 2084, 2609,
	2610, 3257, 1957, 1275, 1275, 1956, 1946, 2012, 2013, 2038,
	1437, 1940, 1937, 3260, 2080, 4181, 1744, 87, 1936, 1935,
	87, 2017, 1906, 1469, 1719, 1470, 1471, 718, 2024, 2025,
	2026, 1469, 4169, 1470, 1471, 1490, 1780, 1959, 1486, 4025,
	1487, 1494, 1495, 1496, 1497, 1499, 1498, 1500, 1501, 42,
	4024, 1472, 42, 2037, 1488, 1502, 1503, 1485, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500, 1501,
	1469, 4000, 1470, 1471, 1490, 3999, 2618, 1744, 2122, 2122,
	2680, 3998, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499,
	1498, 1500, 1501, 1472, 3896, 2120, 2120, 2123, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500, 1501, 1469,
	3880, 1470, 1471, 3565, 718, 2085, 1492, 1493, 1494, 1495,
	1496, 1497, 1499, 1498, 1500, 1501, 2014, 1472, 1705, 3879,
	3246, 1490, 3728, 2018, 3726, 2020, 2021, 2022, 2023, 110,
	2910, 718, 2027, 4179, 1744, 1472, 2499, 2498, 3647, 2206,
	109, 1704, 108, 1703, 2039, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1499, 1498, 1500, 1501, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1499, 1498, 1500, 1501, 1478, 1479, 1480,
	1481, 1482, 1483, 1477, 1474, 4109, 1744, 4018, 85, 1472,
	1702, 85, 2062, 1706, 2497, 2496, 2495, 2494, 1469, 3579,
	1470, 1471, 2092, 2678, 2316, 3564, 101, 1472, 2313, 2155,
	3350, 1472, 103, 1468, 1744, 165, 102, 2315, 1757, 4107,
	1744, 3928, 177, 2045, 2046, 2099, 1744, 2097, 1472, 101,
	2666, 2854, 4196, 966, 3347, 1472, 3279, 4105, 1744, 102,
	1469, 3278, 1470, 1471, 4156, 1744, 2098, 2937, 2100, 2101,
	2102, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2112, 2113,
	2114, 2924, 2126, 185, 2230, 2324, 1701, 1694, 1758, 1472,
	2854, 1744, 1468, 1744, 1469, 2586, 1470, 1471, 1744, 1472,
	1515, 3974, 1744, 2854, 4094, 3927, 2326, 2325, 2170, 2171,
	2172, 2173, 1469, 2314, 1470, 1471, 2312, 2585, 2161, 1761,
	2205, 1744, 2184, 3972, 1744, 1472, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 2854, 4073, 1472,
	3969, 1744, 184, 186, 187, 188, 2545, 3951, 1744, 2854,
	4069, 1472, 2544, 2222, 3981, 1744, 1469, 2381, 1470, 1471,
	2360, 1472, 3618, 4015, 3884, 1472, 3904, 1744, 2407, 2323,
	2854, 3892, 2329, 2330, 1469, 103, 1470, 1471, 1469, 2041,
	1470, 1471, 4170, 3618, 1744, 104, 1472, 2007, 105, 2324,
	1969, 1760, 3250, 2854, 3616, 1469, 3254, 1470, 1471, 1961,
	2409, 1951, 1469, 3253, 1470, 1471, 104, 1947, 2437, 105,
	2326, 2396, 1472, 2523, 1744, 3883, 2359, 3506, 1744, 3539,
	1744, 3626, 2371, 2760, 1744, 3269, 3268, 2091, 1472, 3266,
	3267, 3499, 1744, 1472, 3264, 3265, 1469, 3255, 1470, 1471,
	1097, 1744, 3251, 3496, 1744, 2964, 1469, 3252, 1470, 1471,
	3264, 3263, 2942, 3494, 1744, 1472, 1943, 3457, 1744, 2446,
	2447, 2448, 2449, 2441, 2432, 2442, 2443, 2444, 2445, 2431,
	1047, 1942, 1469, 1097, 1470, 1471, 2878, 1744, 3455, 1744,
	1472, 2452, 2453, 2454, 2455, 2413, 1469, 2372, 1470, 1471,
	2602, 2986, 1849, 2967, 2960, 2961, 2347, 2365, 1469, 2366,
	1470, 1471, 2374, 1941, 3451, 1744, 2466, 2435, 1469, 1759,
	1470, 1471, 1469, 2512, 1470, 1471, 2472, 1472, 2394, 110,
	3448, 1744, 2854, 2853, 2436, 3446, 1744, 2418, 2419, 2417,
	109, 1081, 108, 1469, 1265, 1470, 1471, 2434, 2433, 1472,
	103, 3201, 2899, 3536, 1472, 2899, 2851, 3923, 2509, 2125,
	1744, 1082, 3532, 1472, 1849, 1848, 3532, 1472, 2482, 1469,
	103, 1470, 1471, 1472, 1792, 1791, 2870, 1472, 109, 2870,
	1468, 1472, 3444, 1744, 4057, 1469, 4029, 1470, 1471, 2854,
	1469, 1472, 1470, 1471, 2467, 3231, 2463, 2878, 2517, 2481,
	2877, 2520, 1472, 2521, 2626, 2602, 2485, 2493, 2456, 2458,
	2459, 2537, 1469, 1472, 1470, 1471, 1744, 2524, 3485, 3442,
	1744, 2900, 3535, 3266, 2900, 3174, 2420, 2760, 2516, 2467,
	2519, 2902, 2515, 2663, 2602, 2849, 1136, 1469, 1137, 1470,
	1471, 3440, 1744, 2538, 1472, 2541, 3438, 1744, 1887, 2542,
	2543, 1472, 2662, 1468, 2878, 3436, 1744, 3532, 2523, 3434,
	1744, 2506, 2878, 1472, 2389, 3432, 1744, 1472, 1748, 3430,
	1744, 2350, 2125, 1472, 1469, 3583, 1470, 1471, 2607, 1472,
	1745, 1747, 2523, 3428, 1744, 2063, 2047, 1035, 1035, 1035,
	1993, 1779, 1119, 2548, 3426, 1744, 1469, 95, 1470, 1471,
	1118, 1469, 4135, 1470, 1471, 3424, 1744, 1525, 1036, 1525,
	1469, 4076, 1470, 1471, 1469, 1472, 1470, 1471, 3915, 1751,
	1469, 3881, 1470, 1471, 1469, 2622, 1470, 1471, 1469, 3741,
	1470, 1471, 1472, 3584, 3585, 3586, 3422, 1744, 1469, 2579,
	1470, 1471, 3342, 3420, 1744, 3599, 3596, 3577, 3398, 1469,
	3397, 1470, 1471, 1490, 2625, 3418, 1744, 1472, 3291, 3554,
	1469, 1472, 1470, 1471, 3552, 3404, 1744, 1472, 1851, 2465,
	2934, 3380, 1744, 3338, 3293, 2326, 2325, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1499, 1498, 1500, 1501, 3289, 2594,
	2968, 1469, 95, 1470, 1471, 2462, 2457, 2451, 1469, 2450,
	1470, 1471, 1976, 1882, 2600, 1472, 2933, 2825, 1744, 1922,
	1469, 1878, 1470, 1471, 1469, 1847, 1470, 1471, 121, 2608,
	1469, 3587, 1470, 1471, 2823, 1744, 1469, 1209, 1470, 1471,
	1472, 2614, 3916, 2611, 2612, 2613, 1472, 1707, 1918, 3546,
	3547, 2092, 1472, 3223, 2480, 2363, 1472, 4191, 3224, 2798,
	1744, 2043, 4189, 2775, 1744, 4163, 1472, 4037, 3956, 2767,
	1744, 2934, 1469, 2616, 1470, 1471, 1472, 1923, 1924, 1925,
	1472, 3549, 3285, 674, 3284, 3588, 3589, 3590, 1472, 1469,
	3283, 1470, 1471, 3201, 2615, 2947, 2617, 2580, 3225, 3551,
	2887, 2888, 1919, 1920, 1921, 2620, 2638, 2621, 4013, 3220,
	3221, 1756, 1472, 3219, 1469, 3222, 1470, 1471, 1469, 1049,
	1470, 1471, 4033, 3917, 1469, 2635, 1470, 1471, 3706, 2044,
	3705, 2623, 2758, 1744, 2380, 2804, 1472, 2369, 2756, 1744,
	1472, 3540, 2588, 2589, 2743, 1744, 3995, 2591, 2741, 1744,
	1472, 3179, 3191, 3193, 2792, 1472, 2592, 735, 2739, 1744,
	2674, 3194, 1469, 3178, 1470, 1471, 2151, 2836, 2737, 1744,
	1050, 3525, 2735, 1744, 2122, 3719, 3528, 3721, 3188, 3524,
	2733, 1744, 1992, 1019, 3704, 3262, 1035, 1469, 2917, 1470,
	1471, 2120, 2839, 1469, 2938, 1470, 1471, 1061, 2572, 1469,
	1052, 1470, 1471, 1469, 2634, 1470, 1471, 2168, 1053, 2875,
	2876, 1060, 2837, 1469, 1472, 1470, 1471, 2571, 2407, 2570,
	2569, 1035, 2895, 1469, 2169, 1470, 1471, 1469, 3501, 1470,
	1471, 1472, 2731, 1744, 2840, 1469, 2842, 1470, 1471, 2568,
	2567, 42, 2729, 1744, 2088, 2086, 2087, 2727, 1744, 1472,
	2892, 1175, 1174, 2894, 1472, 2855, 2091, 3358, 1472, 1469,
	2933, 1470, 1471, 2874, 2143, 2132, 2133, 2134, 2135, 2145,
	2136, 2137, 2138, 2150, 2146, 2139, 2140, 2147, 2148, 2149,
	2141, 2142, 2144, 1469, 1472, 1470, 1471, 1469, 101, 1470,
	1471, 1712, 2827, 101, 103, 2864, 3016, 1469, 102, 1470,
	1471, 1436, 1469, 102, 1470, 1471, 2725, 1744, 2974, 129,
	3530, 2893, 2391, 2392, 2847, 1706, 2920, 2922, 1472, 103,
	4205, 3281, 2583, 2723, 1744, 1472, 4112, 110, 2913, 2867,
	1472, 4014, 2852, 3911, 3261, 2972, 2891, 2375, 109, 2897,
	108, 2721, 1744, 1472, 3508, 2606, 2719, 1744, 103, 3177,
	2717, 1744, 2901, 1472, 108, 3980, 3979, 3176, 2472, 2904,
	110, 1469, 3959, 1470, 1471, 1472, 2911, 2914, 3727, 1472,
	3725, 109, 110, 108, 3724, 2983, 2715, 1744, 1469, 3717,
	1470, 1471, 3597, 109, 1472, 3529, 2163, 2925, 1472, 2936,
	3527, 2164, 3294, 1472, 2939, 2940, 1469, 1472, 1470, 1471,
	2935, 1469, 109, 1470, 1471, 1469, 1472, 1470, 1471, 2507,
	2713, 1744, 2943, 1472, 2948, 2949, 2950, 2711, 1744, 2944,
	1865, 1472, 2709, 1744, 3518, 2980, 1059, 3716, 1472, 2226,
	2870, 1469, 1870, 1470, 1471, 2704, 1744, 4193, 4192, 4192,
	1472, 4193, 3690, 2969, 2970, 2700, 1744, 3026, 3027, 2883,
	2886, 2887, 2888, 2884, 2851, 2885, 2889, 2698, 1744, 3080,
	2979, 2691, 1744, 2664, 2361, 1469, 2628, 1470, 1471, 1472,
	1773, 1765, 1469, 1472, 1470, 1471, 2627, 1469, 4001, 1470,
	1471, 3888, 3563, 1472, 3005, 2689, 1744, 1472, 2060, 3497,
	1469, 10, 1470, 1471, 1472, 3, 3043, 97, 3024, 3601,
	1469, 1472, 1470, 1471, 1, 3463, 3008, 114, 115, 2309,
	1027, 1472, 1469, 3459, 1470, 1471, 1469, 1439, 1470, 1471,
	3395, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069,
	3070, 1469, 3394, 1470, 1471, 1469, 1438, 1470, 1471, 2341,
	1469, 3078, 1470, 1471, 1469, 2981, 1470, 1471, 2058, 3044,
	3567, 9, 4124, 1469, 690, 1470, 1471, 1745, 2348, 2351,
	1469, 3386, 1470, 1471, 1472, 3384, 2059, 1710, 1469, 8,
	1470, 1471, 4164, 4120, 4121, 1469, 2929, 1470, 1471, 2821,
	1962, 1952, 3629, 2277, 3912, 3297, 2820, 1469, 2513, 1470,
	1471, 3595, 2470, 2816, 1127, 154, 3025, 2373, 2429, 3082,
	2430, 4089, 118, 2815, 3138, 1707, 3014, 1085, 117, 3015,
	1130, 1238, 2508, 3619, 2918, 2438, 1469, 1798, 1470, 1471,
	1469, 3028, 1470, 1471, 1472, 1796, 1797, 1795, 1472, 3045,
	1469, 1800, 1470, 1471, 1469, 1799, 1470, 1471, 4061, 3366,
	3145, 1469, 3156, 1470, 1471, 2665, 3464, 2051, 1469, 725,
	1470, 1471, 2220, 3147, 2890, 719, 2814, 2959, 1469, 192,
	1470, 1471, 2407, 1787, 1472, 1766, 1169, 680, 3071, 2314,
	3270, 2314, 2312, 2546, 2312, 686, 1522, 2042, 3175, 2905,
	3118, 1079, 1071, 2362, 3208, 2841, 87, 1472, 1078, 2407,
	2407, 2407, 2407, 2407, 2409, 3128, 3129, 3130, 3131, 3132,
	3889, 3209, 3522, 2484, 3187, 3156, 3189, 2857, 3192, 2407,
	3185, 1469, 2407, 1470, 1471, 3213, 2813, 3994, 1038, 3230,
	2812, 2409, 2409, 2409, 2409, 2409, 3155, 1472, 3146, 3718,
	3148, 4074, 2303, 2304, 2305, 2306, 2307, 1472, 2915, 1762,
	3484, 2409, 2637, 2158, 2409, 3173, 3167, 1472, 1512, 2328,
	2406, 1472, 2331, 2332, 3685, 3183, 2811, 2078, 748, 3180,
	747, 2003, 3182, 745, 2843, 2871, 1476, 1475, 956, 3195,
	3196, 1469, 2831, 1470, 1471, 1469, 3314, 1470, 1471, 2802,
	1774, 2882, 1040, 1039, 3214, 3212, 3322, 3217, 2349, 1472,
	3215, 3216, 104, 3218, 3226, 105, 1472, 2880, 3234, 2879,
	2581, 3181, 3232, 2414, 3548, 3233, 3168, 3170, 3172, 3544,
	3240, 1469, 1472, 1470, 1471, 4116, 1472, 2408, 2404, 2801,
	2850, 1472, 907, 3271, 906, 3273, 3272, 757, 749, 2800,
	739, 969, 905, 904, 1469, 3324, 1470, 1471, 3325, 2799,
	1472, 2989, 3339, 2796, 2991, 2916, 3335, 1453, 1472, 3274,
	3275, 3326, 3295, 3323, 1729, 2472, 3327, 1732, 3316, 2370,
	1472, 1098, 3363, 3198, 1472, 4020, 3333, 2605, 3392, 1728,
	4027, 3305, 3613, 3286, 1469, 2965, 1470, 1471, 3204, 2500,
	69, 2791, 46, 3204, 1469, 3989, 1470, 1471, 2784, 4058,
	899, 1472, 3354, 3353, 1469, 3351, 1470, 1471, 1469, 896,
	1470, 1471, 3361, 3687, 2783, 3688, 3689, 3141, 2782, 3142,
	4040, 4041, 895, 2781, 3368, 3369, 3371, 3370, 4042, 2215,
	3372, 1449, 3374, 1472, 3376, 1446, 4137, 3387, 3388, 3389,
	3390, 3391, 2780, 2053, 96, 36, 1469, 35, 1470, 1471,
	2779, 34, 33, 1469, 32, 1470, 1471, 2883, 2886, 2887,
	2888, 2884, 2778, 2885, 2889, 26, 2777, 3546, 3547, 1469,
	1525, 1470, 1471, 1469, 1525, 1470, 1471, 25, 1469, 3296,
	1470, 1471, 24, 23, 22, 29, 19, 2624, 21, 20,
	3509, 2629, 3511, 2776, 18, 3479, 3308, 1469, 4159, 1470,
	1471, 4204, 3483, 123, 55, 1469, 52, 1470, 1471, 50,
	3362, 131, 130, 53, 2632, 49, 2633, 1469, 1212, 1470,
	1471, 1469, 2641, 1470, 1471, 2770, 2643, 2644, 47, 31,
	30, 17, 16, 15, 14, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 3207, 2661, 13, 1469, 12,
	1470, 1471, 2407, 11, 7, 6, 39, 3514, 38, 3510,
	37, 3512, 28, 27, 40, 3561, 4, 3519, 2952, 2667,
	2668, 2669, 2670, 2502, 2672, 2673, 3526, 2675, 1472, 0,
	1469, 2677, 1470, 1471, 2409, 2682, 2683, 3531, 2684, 0,
	0, 2687, 2688, 2690, 2692, 2693, 2694, 2695, 2696, 2697,
	2699, 2701, 2702, 2703, 2705, 737, 2707, 2708, 2710, 2712,
	2714, 2716, 2718, 2720, 2722, 2724, 2726, 2728, 2730, 2732,
	2734, 2736, 2738, 2740, 2742, 2744, 2745, 2746, 3317, 2748,
	3326, 2750, 3323, 2752, 2753, 3327, 2755, 2757, 2759, 3553,
	3562, 3555, 2762, 3516, 3550, 3556, 2766, 3578, 1472, 3580,
	2771, 2772, 2773, 2774, 3356, 3357, 3623, 3624, 3486, 1472,
	3488, 3489, 3490, 2785, 2786, 2787, 2788, 2789, 2790, 1472,
	2769, 2794, 2795, 0, 0, 0, 3543, 0, 0, 2797,
	3572, 3573, 0, 0, 2803, 1472, 0, 0, 0, 2806,
	2807, 2808, 2809, 2810, 0, 3557, 3558, 0, 1472, 0,
	2817, 2818, 1472, 2819, 0, 0, 2822, 2824, 2373, 0,
	2826, 0, 0, 1472, 1058, 0, 0, 1064, 1064, 1472,
	2838, 0, 0, 1472, 0, 1469, 0, 1470, 1471, 1472,
	0, 0, 0, 3606, 0, 0, 0, 3610, 3611, 3612,
	2768, 0, 0, 0, 0, 0, 3625, 0, 0, 0,
	0, 2765, 0, 3641, 0, 0, 0, 2645, 0, 0,
	0, 2764, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 2660, 0, 0, 2763, 0, 0,
	3652, 0, 1472, 0, 0, 0, 0, 0, 0, 1472,
	2761, 0, 0, 1472, 2754, 1469, 0, 1470, 1471, 0,
	1472, 0, 0, 0, 0, 2751, 1469, 0, 1470, 1471,
	1472, 2749, 0, 0, 0, 2747, 1469, 0, 1470, 1471,
	0, 2706, 1472, 3693, 0, 3694, 3695, 3696, 3703, 0,
	0, 3710, 1469, 3712, 1470, 1471, 0, 0, 0, 0,
	0, 0, 0, 0, 3683, 1469, 3713, 1470, 1471, 1469,
	0, 1470, 1471, 0, 2686, 0, 3208, 0, 0, 87,
	1469, 3208, 1470, 1471, 2685, 0, 1469, 0, 1470, 1471,
	1469, 0, 1470, 1471, 2681, 0, 1469, 2122, 1470, 1471,
	0, 2679, 0, 0, 0, 2671, 0, 0, 0, 0,
	0, 42, 2642, 3714, 2120, 3743, 3646, 0, 3723, 0,
	3733, 3722, 2636, 0, 0, 0, 3730, 0, 3732, 1469,
	0, 1470, 1471, 3735, 2631, 0, 0, 0, 0, 1469,
	0, 1470, 1471, 0, 0, 0, 3895, 0, 0, 1469,
	0, 1470, 1471, 0, 0, 3747, 1469, 0, 1470, 1471,
	1469, 0, 1470, 1471, 0, 0, 0, 1469, 1734, 1470,
	1471, 0, 0, 3602, 3603, 0, 0, 1469, 0, 1470,
	1471, 0, 1742, 0, 3887, 1735, 0, 3886, 0, 1469,
	0, 1470, 1471, 0, 0, 3914, 3902, 0, 0, 0,
	0, 0, 0, 3907, 0, 0, 3906, 0, 0, 0,
	2367, 2368, 1741, 1739, 1740, 1738, 1736, 0, 1737, 3953,
	0, 0, 3954, 3885, 0, 2122, 3056, 3057, 3058, 3059,
	3060, 3737, 3711, 0, 0, 0, 0, 0, 3744, 3745,
	0, 0, 2120, 3957, 0, 0, 3075, 0, 0, 0,
	0, 0, 0, 3897, 3898, 3899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3204, 0,
	0, 0, 0, 3960, 4002, 3208, 0, 3963, 0, 0,
	0, 3739, 0, 0, 0, 0, 0, 0, 0, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1663, 1664, 1665, 1666, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	3987, 3986, 1734, 3958, 3977, 4003, 0, 3207, 0, 0,
	0, 3983, 3207, 3985, 4021, 0, 1742, 0, 0, 1735,
	0, 3046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 3210, 0, 0, 0,
	0, 0, 0, 4006, 1730, 1731, 1741, 1739, 1740, 1738,
	1736, 0, 1737, 0, 3228, 4026, 0, 0, 0, 3890,
	0, 4023, 4010, 4005, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3894, 0, 0,
	0, 0, 0, 0, 0, 0, 4028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4046, 0, 0, 4047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4071, 0, 0, 0, 0, 87, 0, 4056, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 4065,
	0, 0, 0, 3120, 0, 3122, 0, 0, 0, 0,
	0, 0, 0, 4077, 0, 0, 0, 42, 0, 0,
	4102, 3133, 3134, 3135, 3136, 1531, 3914, 4091, 4088, 0,
	0, 4080, 3360, 0, 4085, 4082, 4081, 4079, 4084, 4075,
	4083, 4110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4007, 0, 4115, 3377, 3378, 3207, 3379, 3381, 3383,
	0, 4133, 0, 0, 0, 0, 0, 4123, 0, 4128,
	0, 0, 0, 0, 0, 4157, 0, 4102, 4143, 4141,
	0, 0, 0, 4154, 1815, 3396, 0, 0, 0, 0,
	3399, 0, 3401, 3402, 3403, 3405, 3406, 3407, 3408, 3409,
	3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3419, 3421,
	3423, 3425, 3427, 3429, 3431, 3433, 3435, 3437, 3439, 3441,
	3443, 3445, 3447, 3449, 3450, 3452, 3453, 3454, 3456, 4174,
	4158, 3458, 2122, 3460, 3461, 3462, 4177, 4184, 3466, 3467,
	3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 2120,
	4187, 4190, 4186, 4188, 4102, 4198, 4183, 3482, 2003, 4173,
	4153, 3487, 0, 4206, 4072, 3491, 3492, 3204, 3493, 3495,
	0, 3498, 3500, 4212, 3502, 3503, 3504, 3505, 4214, 4067,
	0, 0, 0, 0, 3513, 0, 0, 0, 0, 0,
	2122, 4012, 0, 4223, 4224, 0, 0, 3954, 4222, 0,
	0, 0, 0, 0, 0, 0, 0, 2120, 4221, 0,
	0, 0, 0, 0, 0, 4019, 1815, 0, 0, 3537,
	3538, 0, 0, 3542, 0, 4031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4066, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 3617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 3636, 0, 0, 3640, 0, 952,
	0, 0, 0, 0, 0, 0, 0, 1829, 1832, 1833,
	1834, 1835, 1836, 1837, 0, 1838, 1839, 1841, 1842, 1840,
	1843, 1844, 1817, 1818, 1819, 1820, 1801, 1802, 1830, 0,
	1804, 3653, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 0, 0, 1814, 1821, 1822, 1823, 1824, 0, 1825,
	1826, 1827, 1828, 0, 0, 195, 0, 0, 195, 0,
	0, 0, 723, 0, 0, 4171, 0, 729, 1707, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 3676, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 0, 0, 3684, 0,
	0, 0, 0, 0, 0, 3691, 0, 0, 0, 729,
	195, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 1829,
	1832, 1833, 1834, 1835, 1836, 1837, 0, 1838, 1839, 1841,
	1842, 1840, 1843, 1844, 1817, 1818, 1819, 1820, 1801, 1802,
	1830, 0, 1804, 0, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 0, 0, 1814, 1821, 1822, 1823, 1824,
	0, 1825, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3903, 0, 0, 0, 0, 0,
	0, 0, 0, 3910, 0, 0, 0, 0, 1093, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3920, 3921, 3922, 0, 3924, 0, 3925,
	3926, 0, 0, 0, 0, 3929, 3930, 3931, 3932, 3933,
	3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943,
	3944, 3945, 3946, 3947, 3948, 3949, 3950, 0, 3952, 3955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3674,
	0, 0, 0, 0, 3964, 3965, 3966, 3967, 3968, 3970,
	3971, 3973, 3975, 3976, 3978, 0, 0, 0, 3982, 0,
	0, 0, 3984, 0, 2073, 2074, 2075, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 2128, 2129, 0, 0, 0,
	0, 2152, 0, 0, 2156, 2157, 0, 0, 0, 2162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 0, 2185, 0, 0, 0, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2216, 0, 2221,
	0, 2223, 2224, 2225, 0, 2227, 2228, 2229, 0, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 0, 0,
	0, 0, 0, 2308, 0, 2310, 0, 2317, 2318, 2319,
	2320, 2321, 2322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 0, 2342, 2343, 2344, 2345, 2346,
	0, 0, 0, 0, 0, 0, 0, 3993, 0, 0,
	0, 0, 0, 0, 4036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 4051, 0,
	0, 0, 0, 0, 4054, 0, 4055, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2387, 2388, 0, 4070,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2426, 0, 172, 4096, 4097, 0, 0, 195,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 4104,
	4106, 4108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4114, 0, 162,
	0, 0, 0, 0, 0, 150, 0, 0, 729, 4136,
	729, 729, 0, 0, 0, 0, 0, 0, 86, 44,
	45, 88, 0, 2468, 169, 0, 0, 170, 0, 0,
	729, 195, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 48, 76, 77, 0, 74, 78, 4155, 0, 138,
	139, 161, 160, 189, 0, 1707, 0, 75, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4178, 4180, 4182, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 1213, 0, 1219,
	0, 4035, 0, 0, 4203, 0, 0, 0, 0, 4045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4215, 4216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 0, 155, 136, 158, 143, 135, 0,
	156, 157, 0, 0, 0, 0, 0, 173, 0, 1445,
	0, 0, 0, 0, 0, 0, 179, 144, 0, 0,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 145, 140, 141, 142, 146, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 54, 57, 56, 59,
	0, 73, 0, 0, 82, 79, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 91,
	90, 0, 0, 71, 72, 58, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 729, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 64, 2640, 65, 66, 67,
	68, 0, 0, 195, 0, 0, 2646, 2647, 2648, 2649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	729, 1531, 0, 0, 0, 0, 0, 159, 60, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 1517, 729, 0, 0,
	729, 729, 729, 729, 0, 729, 0, 729, 729, 0,
	729, 729, 729, 729, 729, 729, 0, 0, 0, 0,
	0, 0, 0, 1517, 729, 729, 1517, 729, 1517, 195,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 195, 1776, 152, 0, 0, 153,
	0, 0, 0, 0, 0, 729, 0, 0, 729, 0,
	195, 195, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	165, 0, 0, 0, 195, 0, 0, 177, 0, 0,
	0, 0, 0, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 729, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1977, 0, 0, 0, 0, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	0, 0, 0, 0, 0, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	3047, 3048, 3049, 0, 1517, 3051, 0, 0, 3053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 3072, 3073,
	3074, 0, 0, 0, 0, 0, 0, 3079, 0, 0,
	0, 0, 3081, 0, 0, 3083, 3084, 3085, 0, 0,
	0, 3086, 3087, 0, 0, 3088, 0, 3089, 0, 0,
	0, 0, 0, 0, 3090, 0, 3091, 0, 0, 0,
	3092, 0, 3093, 0, 0, 3094, 0, 3095, 0, 3096,
	0, 3097, 2066, 3098, 0, 3099, 0, 3100, 0, 3101,
	0, 3102, 0, 3103, 0, 3104, 0, 3105, 0, 3106,
	0, 3107, 0, 3108, 0, 3109, 0, 3110, 0, 3111,
	0, 0, 0, 3112, 0, 3113, 0, 3114, 0, 0,
	3115, 0, 3116, 0, 3117, 0, 2280, 3119, 0, 0,
	3121, 0, 0, 3123, 3124, 3125, 3126, 0, 0, 0,
	0, 3127, 2280, 2280, 2280, 2280, 2280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3137, 2327, 0,
	0, 0, 0, 0, 0, 3150, 0, 0, 3154, 0,
	0, 0, 0, 0, 0, 0, 0, 3157, 3158, 3159,
	3160, 3161, 3162, 0, 0, 0, 3163, 3164, 0, 3165,
	0, 3166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3199, 0, 195, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 729,
	0, 3229, 2327, 195, 0, 195, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 729, 729, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 729, 729, 0, 0, 729, 0, 729, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	0, 2397, 0, 2400, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 0, 3385, 729,
	0, 0, 0, 0, 729, 0, 0, 0, 729, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3400, 0, 0, 1017,
	0, 2316, 0, 0, 1018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 195, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 708, 0, 0, 0,
	0, 0, 728, 195, 195, 0, 0, 195, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 728, 0, 728, 0, 0, 0,
	0, 729, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 2958, 0, 0, 0,
	0, 2558, 0, 0, 0, 1517, 0, 2327, 129, 0,
	151, 2577, 2578, 0, 0, 2582, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 2587, 0, 0,
	0, 0, 0, 0, 2590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	2593, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3622, 0,
	0, 0, 0, 0, 169, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1874, 161, 160, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3642, 0, 3643, 0,
	3644, 0, 3645, 0, 0, 0, 0, 0, 0, 0,
	3648, 3649, 0, 0, 0, 0, 0, 0, 0, 0,
	3654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3655, 0, 3656, 0, 3657, 0,
	3658, 0, 3659, 0, 3660, 0, 3661, 0, 3662, 0,
	3663, 0, 3664, 0, 3665, 0, 3666, 0, 3667, 0,
	3668, 0, 3669, 0, 3670, 0, 0, 3671, 0, 0,
	0, 3672, 0, 3673, 155, 1875, 158, 0, 1872, 3675,
	156, 157, 0, 0, 0, 0, 0, 173, 0, 0,
	195, 0, 0, 0, 0, 0, 179, 0, 195, 0,
	0, 3692, 0, 0, 0, 0, 0, 0, 0, 729,
	3697, 0, 3698, 3699, 0, 3700, 0, 3701, 0, 0,
	0, 0, 3702, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 3731,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3740, 0, 0, 3742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 164, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 729, 729,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 0, 0, 1517,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2896, 0, 195, 195, 195, 195, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2945, 0, 0, 0, 729, 0,
	0, 0, 0, 728, 1432, 728, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 1089, 0, 1096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 1516, 0, 152, 0, 0, 153,
	2994, 2995, 2996, 2997, 2998, 2999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 3009, 0,
	165, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 4034,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 0, 0, 0, 0, 0, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 4048, 0, 0, 4049, 0,
	4050, 195, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 1517, 0, 0, 729, 729, 1517, 195, 195,
	195, 195, 195, 0, 0, 0, 0, 1516, 0, 0,
	195, 0, 0, 0, 0, 0, 195, 0, 195, 0,
	0, 195, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 728,
	728, 0, 4134, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 1517, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 4150, 0, 4151, 0, 4152, 0, 195, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 195, 0, 0,
	195, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	728, 0, 0, 0, 0, 4201, 0, 4202, 728, 0,
	0, 1516, 728, 0, 0, 728, 728, 728, 728, 0,
	728, 0, 728, 728, 0, 728, 728, 728, 728, 728,
	728, 0, 0, 0, 0, 3282, 0, 0, 1516, 728,
	728, 1516, 728, 1516, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3334, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	728, 0, 0, 728, 0, 3352, 0, 0, 3355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 1277, 1277, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 1869, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 129, 0, 151, 0, 0, 0, 0,
	195, 0, 0, 195, 195, 195, 0, 0, 0, 172,
	0, 0, 0, 729, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 729, 729, 729, 0, 0, 0, 169,
	0, 0, 170, 0, 909, 0, 0, 728, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 1873, 1874, 161, 160, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 673, 0, 0, 0, 0, 3591, 0,
	0, 3592, 3593, 3594, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 673, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 2130, 1045,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 1065, 1065, 0, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 0, 155,
	1875, 158, 0, 1872, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 729, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 195, 0, 0, 729,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 729,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 729, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 1846, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 0, 0, 1892, 0, 728, 1895, 1896, 1898,
	1898, 0, 1898, 0, 1898, 1898, 0, 1907, 1898, 1898,
	1898, 1898, 1898, 0, 728, 0, 0, 728, 0, 0,
	0, 1927, 1928, 729, 1089, 0, 0, 1933, 0, 0,
	729, 0, 729, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 728, 728, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 728, 0, 0, 0, 0, 0, 728, 728, 0,
	0, 728, 0, 728, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 728,
	0, 0, 0, 728, 728, 165, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 729, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 0, 0, 1277,
	1277, 0, 184, 186, 187, 188, 728, 0, 0, 0,
	0, 729, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 729, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 673, 0, 673, 0, 0, 729,
	2327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 728, 0, 4032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 1018,
	195, 729, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 1518, 0, 95, 0, 0, 1017,
	0, 0, 0, 957, 1018, 970, 971, 972, 958, 0,
	0, 959, 960, 0, 961, 729, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	966, 0, 973, 974, 729, 0, 729, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 0,
	3328, 3329, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 0, 2364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2377, 0,
	0, 0, 0, 0, 728, 3330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 728, 1277,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3331, 3332, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 2490, 2491, 2492, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 1096,
	1890, 0, 673, 1890, 0, 1890, 0, 0, 0, 0,
	0, 2522, 728, 0, 0, 0, 0, 0, 0, 728,
	0, 673, 0, 728, 728, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 926, 1516, 728, 1089, 923, 924, 0,
	0, 2116, 925, 927, 0, 2116, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 1518, 0, 1518, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2596, 0,
	0, 0, 673, 0, 0, 0, 0, 0, 0, 673,
	0, 0, 0, 728, 0, 0, 0, 0, 2028, 2029,
	673, 673, 673, 673, 673, 673, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 1516, 0, 0,
	728, 728, 1516, 0, 0, 0, 0, 0, 0, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3277, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 1518, 1516, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2941, 0, 0,
	0, 0, 0, 2002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2377, 0, 0, 0, 0, 0,
	0, 2966, 0, 0, 0, 1890, 1890, 0, 0, 0,
	2971, 0, 0, 728, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 2982, 0, 0,
	0, 0, 0, 0, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 0, 0, 0, 0, 0, 2002, 673, 0,
	673, 0, 673, 2416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 0, 0, 0,
	0, 0, 0, 0, 3566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 0, 728, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 728, 728,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3139, 673, 0, 0, 0, 0, 0, 0, 673, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 673, 673,
	0, 0, 673, 0, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 673, 0, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3184, 0, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 3211, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 728, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 2002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 2377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 728, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2377, 2377, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 673, 0, 0, 0, 0, 0, 0, 2951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3630,
	3631, 3632, 3633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 673, 673, 673,
	673, 673, 673, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 728, 0, 728,
	0, 0, 0, 0, 673, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 728, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3708, 0, 3708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3736, 0, 3738, 728,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 1518, 673, 673, 673, 673, 673, 0, 0,
	3708, 0, 0, 0, 0, 3227, 0, 3708, 0, 3708,
	0, 1949, 0, 673, 0, 0, 673, 3235, 2002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4060, 0,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 2377,
	0, 4068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4118, 0,
	0, 0, 0, 0, 0, 673, 3768, 3770, 3769, 3835,
	3836, 3837, 3838, 3839, 3840, 3841, 3771, 3772, 799, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 673, 673,
	673, 0, 0, 0, 0, 0, 0, 0, 4060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 4118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 3784, 3785, 0, 0, 3860, 3859, 3858, 0, 0,
	3856, 3857, 3855, 0, 0, 0, 0, 1518, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3861, 922, 0, 775, 776,
	3862, 3863, 926, 3864, 778, 779, 923, 924, 0, 773,
	777, 925, 927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3765, 3766,
	3767, 3773, 3774, 3775, 3786, 3833, 3834, 3842, 3844, 878,
	3843, 3845, 3846, 3847, 3850, 3851, 3852, 3853, 3848, 3849,
	3854, 3748, 3752, 3749, 3750, 3751, 3763, 3753, 3754, 3755,
	3756, 3757, 3758, 3759, 3760, 3761, 3762, 3764, 3865, 3866,
	3867, 3868, 3869, 3870, 3779, 3783, 3782, 3780, 3781, 3777,
	3778, 3805, 3804, 3806, 3807, 3808, 3809, 3810, 3811, 3813,
	3812, 3814, 3815, 3816, 3817, 3818, 3819, 3787, 3788, 3791,
	3792, 3790, 3789, 3793, 3802, 3803, 3794, 3795, 3796, 3797,
	3798, 3799, 3801, 3800, 3820, 3821, 3822, 3823, 3824, 3826,
	3825, 3829, 3830, 3828, 3827, 3832, 3831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 0, 929, 0, 0, 933, 0, 0, 0, 935,
	934, 0, 936, 898, 897, 0, 0, 930, 931, 0,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3871, 3872, 3873, 3874, 3875,
	3876, 3877, 3878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 1415, 1399, 528, 0, 1341,
	1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287, 1356, 416,
	1325, 1313, 1282, 1320, 1283, 1311, 1343, 270, 1308, 1401,
	1360, 1417, 366, 267, 1289, 1280, 204, 505, 1314, 430,
	1330, 203, 1380, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1424, 370, 1366,
	0, 497, 401, 0, 0, 2002, 1405, 1404, 507, 1335,
	1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326,
	1375, 1420, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 4092, 953, 0, 0, 0, 0, 4093,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1322, 1372, 607, 1414, 1323, 1374, 265,
	321, 272, 264, 580, 1425, 1406, 1286, 1353, 1413, 1348,
	0, 0, 229, 1416, 1347, 0, 1377, 0, 1431, 1281,
	1368, 0, 1284, 1288, 1427, 1411, 1317, 275, 0, 0,
	0, 0, 0, 0, 0, 1344, 1355, 1389, 1393, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	1364, 0, 0, 0, 1293, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 0, 1296, 0, 1316, 1390, 0, 1279, 297,
	1290, 402, 257, 0, 453, 1397, 1410, 1339, 625, 1412,
	1337, 1336, 1384, 1294, 1403, 1329, 365, 1292, 330, 197,
	225, 0, 1327, 412, 461, 473, 1402, 1312, 1321, 253,
	1319, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 1363, 1382, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 1291, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 1307, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 1398, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 1387, 1430, 425, 472, 240, 604, 496,
	199, 1301, 1306, 1299, 0, 254, 255, 1369, 575, 1302,
	1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 1391, 1295, 0, 1304,
	1305, 398, 1400, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 1362, 196, 221, 368, 1426, 454, 288, 646,
	615, 484, 610, 206, 223, 1298, 262, 1310, 1318, 0,
	1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371,
	1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 1361, 1367, 381, 281,
	305, 320, 1376, 614, 502, 227, 466, 290, 251, 1394,
	1396, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 1357, 1385, 376, 576, 577,
	316, 396, 0, 0, 0, 0, 0, 1415, 1399, 528,
	0, 1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287,
	1356, 416, 1325, 1313, 1282, 1320, 1283, 1311, 1343, 270,
	1308, 1401, 1360, 1417, 366, 267, 1289, 1280, 204, 505,
	1314, 430, 1330, 203, 1380, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1424,
	370, 1366, 0, 497, 401, 0, 0, 0, 1405, 1404,
	507, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365,
	1419, 1326, 1375, 1420, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1322, 1372, 607, 1414, 1323,
	1374, 265, 321, 272, 264, 580, 1425, 1406, 1286, 1353,
	1413, 1348, 0, 0, 229, 1416, 1347, 0, 1377, 0,
	1431, 1281, 1368, 0, 1284, 1288, 1427, 1411, 1317, 275,
	0, 0, 0, 0, 0, 0, 0, 1344, 1355, 1389,
	1393, 1338, 0, 0, 0, 0, 0, 0, 3236, 0,
	1315, 0, 1364, 0, 0, 0, 1293, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 1296, 0, 1316, 1390, 0,
	1279, 297, 1290, 402, 257, 0, 453, 1397, 1410, 1339,
	625, 1412, 1337, 1336, 1384, 1294, 1403, 1329, 365, 1292,
	330, 197, 225, 0, 1327, 412, 461, 473, 1402, 1312,
	1321, 253, 1319, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1363, 1382, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 1291, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 1307, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 1398, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 1387, 1430, 425, 472, 240,
	604, 496, 199, 1301, 1306, 1299, 0, 254, 255, 1369,
	575, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 1391, 1295,
	0, 1304, 1305, 398, 1400, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 1362, 196, 221, 368, 1426, 454,
	288, 646, 615, 484, 610, 206, 223, 1298, 262, 1310,
	1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352,
	1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 1361, 1367,
	381, 281, 305, 320, 1376, 614, 502, 227, 466, 290,
	251, 1394, 1396, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 1357, 1385, 376,
	576, 577, 316, 396, 0, 0, 0, 0, 0, 1415,
	1399, 528, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334,
	1378, 1287, 1356, 416, 1325, 1313, 1282, 1320, 1283, 1311,
	1343, 270, 1308, 1401, 1360, 1417, 366, 267, 1289, 1280,
	204, 505, 1314, 430, 1330, 203, 1380, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1424, 370, 1366, 0, 497, 401, 0, 0, 0,
	1405, 1404, 507, 1335, 1345, 1407, 1354, 1392, 1340, 1379,
	1297, 1365, 1419, 1326, 1375, 1420, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1322, 1372, 607,
	1414, 1323, 1374, 265, 321, 272, 264, 580, 1425, 1406,
	1286, 1353, 1413, 1348, 0, 0, 229, 1416, 1347, 0,
	1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427, 1411,
	1317, 275, 0, 0, 0, 0, 0, 0, 0, 1344,
	1355, 1389, 1393, 1338, 0, 0, 0, 0, 0, 0,
	3197, 0, 1315, 0, 1364, 0, 0, 0, 1293, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 1296, 0, 1316,
	1390, 0, 1279, 297, 1290, 402, 257, 0, 453, 1397,
	1410, 1339, 625, 1412, 1337, 1336, 1384, 1294, 1403, 1329,
	365, 1292, 330, 197, 225, 0, 1327, 412, 461, 473,
	1402, 1312, 1321, 253, 1319, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 1363, 1382, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 1291, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 1307, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 1398, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 1387, 1430, 425,
	472, 240, 604, 496, 199, 1301, 1306, 1299, 0, 254,
	255, 1369, 575, 1302, 1300, 1358, 1359, 1303, 1421, 1422,
	1423, 1408, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	1391, 1295, 0, 1304, 1305, 398, 1400, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 1362, 196, 221, 368,
	1426, 454, 288, 646, 615, 484, 610, 206, 223, 1298,
	262, 1310, 1318, 0, 1324, 1332, 1333, 1346, 1349, 1350,
	1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395,
	1409, 1429, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	1361, 1367, 381, 281, 305, 320, 1376, 614, 502, 227,
	466, 290, 251, 1394, 1396, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 1357,
	1385, 376, 576, 577, 316, 396, 0, 0, 0, 0,
	0, 1415, 1399, 528, 0, 1341, 1418, 1309, 1328, 1428,
	1331, 1334, 1378, 1287, 1356, 416, 1325, 1313, 1282, 1320,
	1283, 1311, 1343, 270, 1308, 1401, 1360, 1417, 366, 267,
	1289, 1280, 204, 505, 1314, 430, 1330, 203, 1380, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 1424, 370, 1366, 0, 497, 401, 0,
	0, 0, 1405, 1404, 507, 1335, 1345, 1407, 1354, 1392,
	1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 1322,
	1372, 607, 1414, 1323, 1374, 265, 321, 272, 264, 580,
	1425, 1406, 1286, 1353, 1413, 1348, 0, 0, 229, 1416,
	1347, 0, 1377, 0, 1431, 1281, 1368, 0, 1284, 1288,
	1427, 1411, 1317, 275, 0, 0, 0, 0, 0, 0,
	0, 1344, 1355, 1389, 1393, 1338, 0, 0, 0, 0,
	0, 0, 2395, 0, 1315, 0, 1364, 0, 0, 0,
	1293, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 1296,
	0, 1316, 1390, 0, 1279, 297, 1290, 402, 257, 0,
	453, 1397, 1410, 1339, 625, 1412, 1337, 1336, 1384, 1294,
	1403, 1329, 365, 1292, 330, 197, 225, 0, 1327, 412,
	461, 473, 1402, 1312, 1321, 253, 1319, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 1363, 1382, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	1291, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 1307, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	1398, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 1387,
	1430, 425, 472, 240, 604, 496, 199, 1301, 1306, 1299,
	0, 254, 255, 1369, 575, 1302, 1300, 1358, 1359, 1303,
	1421, 1422, 1423, 1408, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 1391, 1295, 0, 1304, 1305, 398, 1400, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 1362, 196,
	221, 368, 1426, 454, 288, 646, 615, 484, 610, 206,
	223, 1298, 262, 1310, 1318, 0, 1324, 1332, 1333, 1346,
	1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386,
	1388, 1395, 1409, 1429, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 1361, 1367, 381, 281, 305, 320, 1376, 614,
	502, 227, 466, 290, 251, 1394, 1396, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 1357, 1385, 376, 576, 577, 316, 396, 0, 0,
	0, 0, 0, 1415, 1399, 528, 0, 1341, 1418, 1309,
	1328, 1428, 1331, 1334, 1378, 1287, 1356, 416, 1325, 1313,
	1282, 1320, 1283, 1311, 1343, 270, 1308, 1401, 1360, 1417,
	366, 267, 1289, 1280, 204, 505, 1314, 430, 1330, 203,
	1380, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1424, 370, 1366, 0, 497,
	401, 0, 0, 0, 1405, 1404, 507, 1335, 1345, 1407,
	1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1322, 1372, 607, 1414, 1323, 1374, 265, 321, 272,
	264, 580, 1425, 1406, 1286, 1353, 1413, 1348, 0, 0,
	229, 1416, 1347, 0, 1377, 0, 1431, 1281, 1368, 0,
	1284, 1288, 1427, 1411, 1317, 275, 0, 0, 0, 0,
	0, 0, 0, 1344, 1355, 1389, 1393, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 1364, 0,
	0, 0, 1293, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 1296, 0, 1316, 1390, 0, 1279, 297, 1290, 402,
	257, 0, 453, 1397, 1410, 1339, 625, 1412, 1337, 1336,
	1384, 1294, 1403, 1329, 365, 1292, 330, 197, 225, 0,
	1327, 412, 461, 473, 1402, 1312, 1321, 253, 1319, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 1363,
	1382, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 1291, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 1307,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 1398, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 1387, 1430, 425, 472, 240, 604, 496, 199, 1301,
	1306, 1299, 0, 254, 255, 1369, 575, 1302, 1300, 1358,
	1359, 1303, 1421, 1422, 1423, 1408, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 1391, 1295, 0, 1304, 1305, 398,
	1400, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	1362, 196, 221, 368, 1426, 454, 288, 646, 615, 484,
	610, 206, 223, 1298, 262, 1310, 1318, 0, 1324, 1332,
	1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381,
	1383, 1386, 1388, 1395, 1409, 1429, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 1361, 1367, 381, 281, 305, 320,
	1376, 614, 502, 227, 466, 290, 251, 1394, 1396, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 1357, 1385, 376, 576, 577, 316, 396,
	0, 0, 0, 0, 0, 1415, 1399, 528, 0, 1341,
	1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287, 1356, 416,
	1325, 1313, 1282, 1320, 1283, 1311, 1343, 270, 1308, 1401,
	1360, 1417, 366, 267, 1289, 1280, 204, 505, 1314, 430,
	1330, 203, 1380, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1424, 370, 1366,
	0, 497, 401, 0, 0, 0, 1405, 1404, 507, 1335,
	1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326,
	1375, 1420, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1322, 1372, 607, 1414, 1323, 1374, 265,
	321, 272, 264, 580, 1425, 1406, 1286, 1353, 1413, 1348,
	0, 0, 229, 1416, 1347, 0, 1377, 0, 1431, 1281,
	1368, 0, 1284, 1288, 1427, 1411, 1317, 275, 0, 0,
	0, 0, 0, 0, 0, 1344, 1355, 1389, 1393, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	1364, 0, 0, 0, 1293, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 0, 1296, 0, 1316, 1390, 0, 1279, 297,
	1290, 402, 257, 0, 453, 1397, 1410, 1339, 625, 1412,
	1337, 1336, 1384, 1294, 1403, 1329, 365, 1292, 330, 197,
	225, 0, 1327, 412, 461, 473, 1402, 1312, 1321, 253,
	1319, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 1363, 1382, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 1291, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 1307, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 1398, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 1387, 1430, 425, 472, 240, 604, 496,
	199, 1301, 1306, 1299, 0, 254, 255, 1369, 575, 1302,
	1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 1391, 1295, 0, 1304,
	1305, 398, 1400, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 1362, 196, 221, 368, 1426, 454, 288, 646,
	615, 484, 610, 206, 223, 1298, 262, 1310, 1318, 0,
	1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371,
	1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 1361, 1367, 381, 281,
	305, 320, 1376, 614, 502, 227, 466, 290, 251, 1394,
	1396, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 1357, 1385, 376, 576, 577,
	316, 396, 0, 0, 0, 0, 0, 1415, 1399, 528,
	0, 1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287,
	1356, 416, 1325, 1313, 1282, 1320, 1283, 1311, 1343, 270,
	1308, 1401, 1360, 1417, 366, 267, 1289, 1280, 204, 505,
	1314, 430, 1330, 203, 1380, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1424,
	370, 1366, 0, 497, 401, 0, 0, 0, 1405, 1404,
	507, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365,
	1419, 1326, 1375, 1420, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1322, 1372, 607, 1414, 1323,
	1374, 265, 321, 272, 264, 580, 1425, 1406, 1286, 1353,
	1413, 1348, 0, 0, 229, 1416, 1347, 0, 1377, 0,
	1431, 1281, 1368, 0, 1284, 1288, 1427, 1411, 1317, 275,
	0, 0, 0, 0, 0, 0, 0, 1344, 1355, 1389,
	1393, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 1364, 0, 0, 0, 1293, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 1296, 0, 1316, 1390, 0,
	1279, 297, 1290, 402, 257, 0, 453, 1397, 1410, 1339,
	625, 1412, 1337, 1336, 1384, 1294, 1403, 1329, 365, 1292,
	330, 197, 225, 0, 1327, 412, 461, 473, 1402, 1312,
	1321, 253, 1319, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1363, 1382, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 1291, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 1307, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 1398, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 1387, 1430, 425, 472, 240,
	604, 496, 199, 1301, 1306, 1299, 0, 254, 255, 1369,
	575, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 1391, 1295,
	0, 1304, 1305, 398, 1400, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 1362, 196, 221, 368, 1426, 454,
	288, 646, 615, 484, 610, 206, 223, 1298, 262, 1310,
	1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352,
	1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 1361, 1367,
	381, 281, 305, 320, 1376, 614, 502, 227, 466, 290,
	251, 1394, 1396, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 1357, 1385, 376,
	576, 577, 316, 396, 0, 0, 0, 0, 0, 1415,
	1399, 528, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334,
	1378, 1287, 1356, 416, 1325, 1313, 1282, 1320, 1283, 1311,
	1343, 270, 1308, 1401, 1360, 1417, 366, 267, 1289, 1280,
	204, 505, 1314, 430, 1330, 203, 1380, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1424, 370, 1366, 0, 497, 401, 0, 0, 0,
	1405, 1404, 507, 1335, 1345, 1407, 1354, 1392, 1340, 1379,
	1297, 1365, 1419, 1326, 1375, 1420, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1322, 1372, 607,
	1414, 1323, 1374, 265, 321, 272, 264, 580, 1425, 1406,
	1286, 1353, 1413, 1348, 0, 0, 229, 1416, 1347, 0,
	1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427, 1411,
	1317, 275, 0, 0, 0, 0, 0, 0, 0, 1344,
	1355, 1389, 1393, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 1364, 0, 0, 0, 1293, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 1296, 0, 1316,
	1390, 0, 1279, 297, 1290, 402, 257, 0, 453, 1397,
	1410, 1339, 625, 1412, 1337, 1336, 1384, 1294, 1403, 1329,
	365, 1292, 330, 197, 225, 0, 1327, 412, 461, 473,
	1402, 1312, 1321, 253, 1319, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 1363, 1382, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 1291, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 1307, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 1398, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 1387, 1430, 425,
	472, 240, 604, 496, 199, 1301, 1306, 1299, 0, 254,
	255, 1369, 575, 1302, 1300, 1358, 1359, 1303, 1421, 1422,
	1423, 1408, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	1391, 1295, 0, 1304, 1305, 398, 1400, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 1362, 196, 221, 368,
	1426, 454, 288, 646, 615, 484, 610, 206, 223, 1298,
	262, 1310, 1318, 0, 1324, 1332, 1333, 1346, 1349, 1350,
	1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395,
	1409, 1429, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	1361, 1367, 381, 281, 305, 320, 1376, 614, 502, 227,
	466, 290, 251, 1394, 1396, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 1357,
	1385, 376, 576, 577, 316, 396, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 758,
	0, 0, 0, 270, 763, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 770, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 765, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 1017,
	953, 742, 919, 957, 1018, 970, 971, 972, 958, 0,
	238, 959, 960, 245, 961, 0, 918, 801, 803, 802,
	868, 869, 870, 871, 872, 873, 874, 804, 805, 799,
	966, 607, 973, 974, 0, 265, 321, 272, 264, 580,
	0, 0, 2217, 2218, 2219, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 738, 755, 0, 769,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 0, 0, 0, 0, 913, 0, 754, 0,
	0, 762, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 912, 0, 0, 625, 0, 0, 910, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 963, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 964, 965, 256, 648, 809, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 817, 818, 280, 307, 894, 893, 892, 306,
	308, 890, 891, 889, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 900, 922, 911, 775,
	776, 901, 902, 926, 903, 778, 779, 923, 924, 772,
	773, 777, 925, 927, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 914, 761, 760, 0, 767, 768, 0, 797,
	798, 800, 806, 807, 808, 819, 866, 867, 875, 877,
	878, 876, 879, 880, 881, 884, 885, 886, 887, 882,
	883, 888, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 937,
	938, 939, 940, 941, 942, 812, 816, 815, 813, 814,
	810, 811, 838, 837, 839, 840, 841, 842, 843, 844,
	846, 845, 847, 848, 849, 850, 851, 852, 820, 821,
	824, 825, 823, 822, 826, 835, 836, 827, 828, 829,
	830, 831, 832, 834, 833, 853, 854, 855, 856, 857,
	859, 858, 862, 863, 861, 860, 865, 864, 759, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 928, 262, 929, 0, 0, 933, 0, 0, 0,
	935, 934, 0, 936, 898, 897, 0, 0, 930, 931,
	0, 932, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 943, 944, 945, 946,
	947, 948, 949, 950, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 968, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 758, 0, 0, 0, 270,
	763, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 770,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 765, 766, 0, 0, 0, 0,
	0, 0, 2424, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1017, 953, 742, 919, 957,
	1018, 970, 971, 972, 958, 0, 238, 959, 960, 245,
	961, 0, 918, 801, 803, 802, 868, 869, 870, 871,
	872, 873, 874, 804, 805, 799, 966, 607, 973, 974,
	2425, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 738, 755, 0, 769, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 0, 0,
	0, 0, 913, 0, 754, 0, 0, 762, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 912, 0, 0,
	625, 0, 0, 910, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 963, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 964,
	965, 256, 648, 809, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 817, 818,
	280, 307, 894, 893, 892, 306, 308, 890, 891, 889,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 900, 922, 911, 775, 776, 901, 902, 926,
	903, 778, 779, 923, 924, 772, 773, 777, 925, 927,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 914, 761,
	760, 0, 767, 768, 0, 797, 798, 800, 806, 807,
	808, 819, 866, 867, 875, 877, 878, 876, 879, 880,
	881, 884, 885, 886, 887, 882, 883, 888, 780, 784,
	781, 782, 783, 795, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 796, 937, 938, 939, 940, 941,
	942, 812, 816, 815, 813, 814, 810, 811, 838, 837,
	839, 840, 841, 842, 843, 844, 846, 845, 847, 848,
	849, 850, 851, 852, 820, 821, 824, 825, 823, 822,
	826, 835, 836, 827, 828, 829, 830, 831, 832, 834,
	833, 853, 854, 855, 856, 857, 859, 858, 862, 863,
	861, 860, 865, 864, 759, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 928, 262, 929,
	0, 0, 933, 0, 0, 0, 935, 934, 0, 936,
	898, 897, 0, 0, 930, 931, 0, 932, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 943, 944, 945, 946, 947, 948, 949, 950,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 968, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 86, 528, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 758, 0, 0, 0, 270, 763, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 770, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	765, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 1017, 953, 742, 919, 957, 1018, 970, 971, 972,
	958, 0, 238, 959, 960, 245, 961, 0, 918, 801,
	803, 802, 868, 869, 870, 871, 872, 873, 874, 804,
	805, 799, 966, 607, 973, 974, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 738, 755,
	0, 769, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 753, 0, 0, 0, 0, 913, 0,
	754, 0, 0, 762, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 912, 0, 0, 625, 0, 0, 910,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 963, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 964, 965, 256, 648, 809,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 817, 818, 280, 307, 894, 893,
	892, 306, 308, 890, 891, 889, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 900, 922,
	911, 775, 776, 901, 902, 926, 903, 778, 779, 923,
	924, 772, 773, 777, 925, 927, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 914, 761, 760, 0, 767, 768,
	0, 797, 798, 800, 806, 807, 808, 819, 866, 867,
	875, 877, 878, 876, 879, 880, 881, 884, 885, 886,
	887, 882, 883, 888, 780, 784, 781, 782, 783, 795,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	796, 937, 938, 939, 940, 941, 942, 812, 816, 815,
	813, 814, 810, 811, 838, 837, 839, 840, 841, 842,
	843, 844, 846, 845, 847, 848, 849, 850, 851, 852,
	820, 821, 824, 825, 823, 822, 826, 835, 836, 827,
	828, 829, 830, 831, 832, 834, 833, 853, 854, 855,
	856, 857, 859, 858, 862, 863, 861, 860, 865, 864,
	759, 196, 221, 368, 94, 454, 288, 646, 615, 484,
	610, 206, 223, 928, 262, 929, 0, 0, 933, 0,
	0, 0, 935, 934, 0, 936, 898, 897, 0, 0,
	930, 931, 0, 932, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 943, 944,
	945, 946, 947, 948, 949, 950, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 968, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 758, 0, 0,
	0, 270, 763, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 770, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 765, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 1017, 953, 742,
	919, 957, 1018, 970, 971, 972, 958, 0, 238, 959,
	960, 245, 961, 0, 918, 801, 803, 802, 868, 869,
	870, 871, 872, 873, 874, 804, 805, 799, 966, 607,
	973, 974, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 738, 755, 0, 769, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 753,
	0, 0, 0, 0, 913, 0, 754, 0, 0, 762,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 912,
	0, 0, 625, 0, 0, 910, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 963, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 4078, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 964, 965, 256, 648, 809, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	817, 818, 280, 307, 894, 893, 892, 306, 308, 890,
	891, 889, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 900, 922, 911, 775, 776, 901,
	902, 926, 903, 778, 779, 923, 924, 772, 773, 777,
	925, 927, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	914, 761, 760, 0, 767, 768, 0, 797, 798, 800,
	806, 807, 808, 819, 866, 867, 875, 877, 878, 876,
	879, 880, 881, 884, 885, 886, 887, 882, 883, 888,
	780, 784, 781, 782, 783, 795, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 796, 937, 938, 939,
	940, 941, 942, 812, 816, 815, 813, 814, 810, 811,
	838, 837, 839, 840, 841, 842, 843, 844, 846, 845,
	847, 848, 849, 850, 851, 852, 820, 821, 824, 825,
	823, 822, 826, 835, 836, 827, 828, 829, 830, 831,
	832, 834, 833, 853, 854, 855, 856, 857, 859, 858,
	862, 863, 861, 860, 865, 864, 759, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 928,
	262, 929, 0, 0, 933, 0, 0, 0, 935, 934,
	0, 936, 898, 897, 0, 0, 930, 931, 0, 932,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 943, 944, 945, 946, 947, 948,
	949, 950, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 968, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 758, 0, 0, 0, 270, 763, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 770, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 765, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 1744, 1017, 953, 742, 919, 957, 1018, 970,
	971, 972, 958, 0, 238, 959, 960, 245, 961, 0,
	918, 801, 803, 802, 868, 869, 870, 871, 872, 873,
	874, 804, 805, 799, 966, 607, 973, 974, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	738, 755, 0, 769, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 753, 0, 0, 0, 0,
	913, 0, 754, 0, 0, 762, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 912, 0, 0, 625, 0,
	0, 910, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 963,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 964, 965, 256,
	648, 809, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 817, 818, 280, 307,
	894, 893, 892, 306, 308, 890, 891, 889, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	900, 922, 911, 775, 776, 901, 902, 926, 903, 778,
	779, 923, 924, 772, 773, 777, 925, 927, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 914, 761, 760, 0,
	767, 768, 0, 797, 798, 800, 806, 807, 808, 819,
	866, 867, 875, 877, 878, 876, 879, 880, 881, 884,
	885, 886, 887, 882, 883, 888, 780, 784, 781, 782,
	783, 795, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 796, 937, 938, 939, 940, 941, 942, 812,
	816, 815, 813, 814, 810, 811, 838, 837, 839, 840,
	841, 842, 843, 844, 846, 845, 847, 848, 849, 850,
	851, 852, 820, 821, 824, 825, 823, 822, 826, 835,
	836, 827, 828, 829, 830, 831, 832, 834, 833, 853,
	854, 855, 856, 857, 859, 858, 862, 863, 861, 860,
	865, 864, 759, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 928, 262, 929, 0, 0,
	933, 0, 0, 0, 935, 934, 0, 936, 898, 897,
	0, 0, 930, 931, 0, 932, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	943, 944, 945, 946, 947, 948, 949, 950, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 968,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 758,
	0, 0, 0, 270, 763, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 770, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 765, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 1017,
	953, 742, 919, 957, 1018, 970, 971, 972, 958, 0,
	238, 959, 960, 245, 961, 0, 918, 801, 803, 802,
	868, 869, 870, 871, 872, 873, 874, 804, 805, 799,
	966, 607, 973, 974, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 738, 755, 0, 769,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 1063, 0, 0, 0, 913, 0, 754, 0,
	0, 762, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 912, 0, 0, 625, 0, 0, 910, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 963, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 964, 965, 256, 648, 809, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 817, 818, 280, 307, 894, 893, 892, 306,
	308, 890, 891, 889, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 900, 922, 911, 775,
	776, 901, 902, 926, 903, 778, 779, 923, 924, 772,
	773, 777, 925, 927, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 914, 761, 760, 0, 767, 768, 0, 797,
	798, 800, 806, 807, 808, 819, 866, 867, 875, 877,
	878, 876, 879, 880, 881, 884, 885, 886, 887, 882,
	883, 888, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 937,
	938, 939, 940, 941, 942, 812, 816, 815, 813, 814,
	810, 811, 838, 837, 839, 840, 841, 842, 843, 844,
	846, 845, 847, 848, 849, 850, 851, 852, 820, 821,
	824, 825, 823, 822, 826, 835, 836, 827, 828, 829,
	830, 831, 832, 834, 833, 853, 854, 855, 856, 857,
	859, 858, 862, 863, 861, 860, 865, 864, 759, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 928, 262, 929, 0, 0, 933, 0, 0, 0,
	935, 934, 0, 936, 898, 897, 0, 0, 930, 931,
	0, 932, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 943, 944, 945, 946,
	947, 948, 949, 950, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 968, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 758, 0, 0, 0, 270,
	763, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 770,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 765, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1017, 953, 742, 919, 957,
	1018, 970, 971, 972, 958, 0, 238, 959, 960, 245,
	961, 0, 918, 801, 803, 802, 868, 869, 870, 871,
	872, 873, 874, 804, 805, 799, 966, 607, 973, 974,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 738, 755, 0, 769, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 0, 0,
	0, 0, 913, 0, 754, 0, 0, 762, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 912, 0, 0,
	625, 0, 0, 910, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 963, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 964,
	965, 256, 648, 809, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 817, 818,
	280, 307, 894, 893, 892, 306, 308, 890, 891, 889,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 900, 922, 911, 775, 776, 901, 902, 926,
	903, 778, 779, 923, 924, 772, 773, 777, 925, 927,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 914, 761,
	760, 0, 767, 768, 0, 797, 798, 800, 806, 807,
	808, 819, 866, 867, 875, 877, 878, 876, 879, 880,
	881, 884, 885, 886, 887, 882, 883, 888, 780, 784,
	781, 782, 783, 795, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 796, 937, 938, 939, 940, 941,
	942, 812, 816, 815, 813, 814, 810, 811, 838, 837,
	839, 840, 841, 842, 843, 844, 846, 845, 847, 848,
	849, 850, 851, 852, 820, 821, 824, 825, 823, 822,
	826, 835, 836, 827, 828, 829, 830, 831, 832, 834,
	833, 853, 854, 855, 856, 857, 859, 858, 862, 863,
	861, 860, 865, 864, 759, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 928, 262, 929,
	0, 0, 933, 0, 0, 0, 935, 934, 0, 936,
	898, 897, 0, 0, 930, 931, 0, 932, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 943, 944, 945, 946, 947, 948, 949, 950,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 968, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 758, 0, 0, 0, 270, 763, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 770, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	765, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 1017, 953, 742, 919, 957, 1018, 970, 971, 972,
	958, 0, 238, 959, 960, 245, 961, 0, 918, 801,
	803, 802, 868, 869, 870, 871, 872, 873, 874, 804,
	805, 799, 966, 607, 973, 974, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 738, 755,
	0, 769, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 753, 0, 0, 0, 0, 913, 0,
	754, 0, 0, 762, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 3153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 912, 0, 0, 625, 0, 0, 910,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 963, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 964, 965, 256, 648, 809,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 817, 818, 280, 307, 894, 893,
	892, 306, 308, 890, 891, 889, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 900, 922,
	911, 775, 776, 901, 902, 926, 903, 778, 779, 923,
	924, 772, 773, 777, 925, 927, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 914, 761, 760, 0, 767, 768,
	0, 797, 798, 800, 806, 807, 808, 819, 866, 867,
	875, 877, 878, 876, 879, 880, 881, 884, 885, 886,
	887, 882, 883, 888, 780, 784, 781, 782, 783, 795,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	796, 937, 938, 939, 940, 941, 942, 812, 816, 815,
	813, 814, 810, 811, 838, 837, 839, 840, 841, 842,
	843, 844, 846, 845, 847, 848, 849, 850, 851, 852,
	820, 821, 824, 825, 823, 822, 826, 835, 836, 827,
	828, 829, 830, 831, 832, 834, 833, 853, 854, 855,
	856, 857, 859, 858, 862, 863, 861, 860, 865, 864,
	759, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 928, 262, 929, 0, 0, 933, 0,
	0, 0, 935, 934, 0, 936, 898, 897, 0, 0,
	930, 931, 0, 932, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 943, 944,
	945, 946, 947, 948, 949, 950, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 968, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 758, 0, 0,
	0, 270, 763, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 770, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 765, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 1017, 953, 742,
	919, 957, 1018, 970, 971, 972, 958, 0, 238, 959,
	960, 245, 961, 0, 918, 801, 803, 802, 868, 869,
	870, 871, 872, 873, 874, 804, 805, 799, 966, 607,
	973, 974, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 738, 755, 0, 769, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 753,
	0, 0, 0, 0, 913, 0, 754, 0, 0, 762,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 3149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 912,
	0, 0, 625, 0, 0, 910, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 963, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 964, 965, 256, 648, 809, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	817, 818, 280, 307, 894, 893, 892, 306, 308, 890,
	891, 889, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 900, 922, 911, 775, 776, 901,
	902, 926, 903, 778, 779, 923, 924, 772, 773, 777,
	925, 927, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	914, 761, 760, 0, 767, 768, 0, 797, 798, 800,
	806, 807, 808, 819, 866, 867, 875, 877, 878, 876,
	879, 880, 881, 884, 885, 886, 887, 882, 883, 888,
	780, 784, 781, 782, 783, 795, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 796, 937, 938, 939,
	940, 941, 942, 812, 816, 815, 813, 814, 810, 811,
	838, 837, 839, 840, 841, 842, 843, 844, 846, 845,
	847, 848, 849, 850, 851, 852, 820, 821, 824, 825,
	823, 822, 826, 835, 836, 827, 828, 829, 830, 831,
	832, 834, 833, 853, 854, 855, 856, 857, 859, 858,
	862, 863, 861, 860, 865, 864, 759, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 928,
	262, 929, 0, 0, 933, 0, 0, 0, 935, 934,
	0, 936, 898, 897, 0, 0, 930, 931, 0, 932,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 943, 944, 945, 946, 947, 948,
	949, 950, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 968, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 758, 0, 0, 0, 270, 763, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 770, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 765, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 0, 1017, 953, 1084, 919, 957, 1018, 970,
	971, 972, 958, 0, 238, 959, 960, 245, 961, 0,
	918, 801, 803, 802, 868, 869, 870, 871, 872, 873,
	874, 804, 805, 799, 966, 607, 973, 974, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 769, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 753, 0, 0, 0, 0,
	913, 0, 754, 0, 0, 762, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 912, 0, 0, 625, 0,
	0, 910, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 963,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 964, 965, 256,
	648, 809, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 817, 818, 280, 307,
	894, 893, 892, 306, 308, 890, 891, 889, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	900, 922, 911, 775, 776, 901, 902, 926, 903, 778,
	779, 923, 924, 772, 773, 777, 925, 927, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 914, 761, 760, 0,
	767, 768, 0, 797, 798, 800, 806, 807, 808, 819,
	866, 867, 875, 877, 878, 876, 879, 880, 881, 884,
	885, 886, 887, 882, 883, 888, 780, 784, 781, 782,
	783, 795, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 796, 937, 938, 939, 940, 941, 942, 812,
	816, 815, 813, 814, 810, 811, 838, 837, 839, 840,
	841, 842, 843, 844, 846, 845, 847, 848, 849, 850,
	851, 852, 820, 821, 824, 825, 823, 822, 826, 835,
	836, 827, 828, 829, 830, 831, 832, 834, 833, 853,
	854, 855, 856, 857, 859, 858, 862, 863, 861, 860,
	865, 864, 759, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 928, 262, 929, 0, 0,
	933, 0, 0, 0, 935, 934, 0, 936, 898, 897,
	0, 0, 930, 931, 0, 932, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	943, 944, 945, 946, 947, 948, 949, 950, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 968,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 758,
	0, 0, 0, 270, 763, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 770, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 765, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 1017,
	953, 1084, 919, 957, 1018, 970, 971, 972, 958, 0,
	238, 959, 960, 245, 961, 0, 918, 801, 803, 802,
	868, 869, 870, 871, 872, 873, 874, 804, 805, 799,
	966, 607, 973, 974, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 769,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 0, 0, 0, 0, 913, 0, 754, 0,
	0, 762, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 2108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 912, 0, 0, 625, 0, 0, 910, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 963, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 964, 965, 256, 648, 809, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 817, 818, 280, 307, 894, 893, 892, 306,
	308, 890, 891, 889, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 900, 922, 911, 775,
	776, 901, 902, 926, 903, 778, 779, 923, 924, 772,
	773, 777, 925, 927, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 914, 761, 760, 0, 767, 768, 0, 797,
	798, 800, 806, 807, 808, 819, 866, 867, 875, 877,
	878, 876, 879, 880, 881, 884, 885, 886, 887, 882,
	883, 888, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 937,
	938, 939, 940, 941, 942, 812, 816, 815, 813, 814,
	810, 811, 838, 837, 839, 840, 841, 842, 843, 844,
	846, 845, 847, 848, 849, 850, 851, 852, 820, 821,
	824, 825, 823, 822, 826, 835, 836, 827, 828, 829,
	830, 831, 832, 834, 833, 853, 854, 855, 856, 857,
	859, 858, 862, 863, 861, 860, 865, 864, 759, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 928, 262, 929, 0, 0, 933, 0, 0, 0,
	935, 934, 0, 936, 898, 897, 0, 0, 930, 931,
	0, 932, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 943, 944, 945, 946,
	947, 948, 949, 950, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 968, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 758, 0, 0, 0, 270,
	763, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 770,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 765, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1017, 953, 1084, 919, 957,
	1018, 970, 971, 972, 958, 0, 238, 959, 960, 245,
	961, 0, 918, 801, 803, 802, 868, 869, 870, 871,
	872, 873, 874, 804, 805, 799, 966, 607, 973, 974,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 0, 769, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 0, 0,
	0, 0, 913, 0, 754, 0, 0, 762, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 912, 0, 0,
	625, 0, 0, 910, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 963, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 964,
	965, 256, 648, 809, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 817, 818,
	280, 307, 894, 893, 892, 306, 308, 890, 891, 889,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 900, 922, 911, 775, 776, 901, 902, 926,
	903, 778, 779, 923, 924, 772, 773, 777, 925, 927,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 914, 761,
	760, 0, 767, 768, 0, 797, 798, 800, 806, 807,
	808, 819, 866, 867, 875, 877, 878, 876, 879, 880,
	881, 884, 885, 886, 887, 882, 883, 888, 780, 784,
	781, 782, 783, 795, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 796, 937, 938, 939, 940, 941,
	942, 812, 816, 815, 813, 814, 810, 811, 838, 837,
	839, 840, 841, 842, 843, 844, 846, 845, 847, 848,
	849, 850, 851, 852, 820, 821, 824, 825, 823, 822,
	826, 835, 836, 827, 828, 829, 830, 831, 832, 834,
	833, 853, 854, 855, 856, 857, 859, 858, 862, 863,
	861, 860, 865, 864, 759, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 928, 262, 929,
	0, 0, 933, 0, 0, 0, 935, 934, 0, 936,
	898, 897, 0, 0, 930, 931, 0, 932, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 943, 944, 945, 946, 947, 948, 949, 950,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 968, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 1134, 625, 0, 0, 0,
	0, 0, 1131, 1132, 365, 1092, 330, 197, 225, 1125,
	1129, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 1701, 953, 0,
	0, 1698, 0, 0, 0, 0, 1696, 0, 238, 1697,
	1695, 245, 1700, 0, 918, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 86, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 94, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 2411, 0, 0, 2410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 1767, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 1769, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 1771,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 1469, 0, 1470, 1471, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 86, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 1744, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 94, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 2410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 2358, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 1950, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 2356, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 1092, 330, 197,
	225, 1090, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 2358, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 1950,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 1744, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 3709, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 2117, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 2860, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 2845,
	0, 0, 0, 0, 238, 0, 0, 245, 2846, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 1790, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 1789,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 720, 721, 722, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	4053, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 1950, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 3709, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 2412, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 1771, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	2064, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 2055, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1917, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 1915, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1913, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 1911,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 1909, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1905, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 1903, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1901, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 1876, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 1775, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	1447, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1043, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	671, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	4119, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 0, 0, 376, 576, 577, 316,
}

var yyPact = [...]int{
	-1000, -1000, 5117, -1000, -544, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2453, 2507, -1000, -1000, -1000, -1000, 2682, -1000, 1031,
	2123, -1000, 2466, 5025, -1000, 56043, 787, -1000, 53099, -450,
	885, 235, 36907, -1000, 184, -1000, 176, 54571, 175, -1000,
	-1000, -1000, -1000, -450, 22187, 2324, 48, 43, 56043, -1000,
	-1000, -1000, -1000, -365, 2552, 2097, -1000, 436, -1000, -1000,
	-1000, -1000, -1000, -1000, 52363, -1000, 1149, -1000, -1000, 2478,
	2458, 2294, 948, 2343, -1000, 2521, 2097, -1000, 22187, 2594,
	2361, 21451, 21451, 443, -1000, -1000, 318, -1000, -1000, 31755,
	56043, 39851, 282, -1000, 2466, -1000, -1000, -1000, 186, -1000,
	335, 2004, -1000, 1996, -1000, 894, 907, 376, 868, 488,
	361, 356, 351, 348, 346, 343, 341, 340, 385, -1000,
	982, 982, -247, -249, 1020, 431, 434, 434, 1021, 468,
	2405, 2404, -1000, -1000, 982, 982, 982, 355, 982, 982,
	982, 982, 312, 296, 982, 982, 982, 982, 982, 982,
	982, 982, 982, 982, 982, 982, 982, 982, 982, 982,
	982, 898, 2466, 278, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56043,
	182, 56043, -1000, 838, 786, -1000, -1000, -454, 1107, 1107,
	79, 1107, 1107, 1107, 1107, 172, 952, 38, -1000, 170,
	283, 156, 270, 1082, 208, -1000, -1000, 254, 1082, 1846,
	-1000, 972, 266, 163, -1000, 1107, 1107, -1000, 14803, 227,
	14803, 14803, -1000, 2457, -1000, -1000, -1000, -1000, -1000, 1340,
	-1000, -1000, -1000, -1000, -48, 467, -1000, -1000, -1000, -1000,
	54571, 51627, 275, -1000, -1000, 29, 1884, 1388, 22187, 1444,
	927, -1000, -1000, 1313, 908, -1000, -1000, -1000, -1000, -1000,
	815, -1000, 24395, 24395, 24395, 24395, -1000, -1000, 2002, 50891,
	2002, 2002, 24395, 2002, 24395, 2002, 2002, 2002, 2002, 22187,
	2002, 2002, 2002, 2002, -1000, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, -1000, -1000, -1000, -1000, 2002, 837,
	2002, 2002, 2002, 2002, 2002, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2002, 2002, 2002, 2002, 2002, 2002, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, -1000, -1000, -1000, 1599, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27339, 1522, 1485, 1483, -1000, 19243, 2002, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56043, -1000, 2002, 204, 54571, 54571, 378, 1350, -1000, -1000,
	2521, 2097, -1000, 2552, 2540, 436, -1000, 3856, 1919, 1611,
	1410, 2097, 1972, 56043, -1000, 2024, -1000, -1000, -1000, -315,
	-319, 2235, 1600, 1821, -1000, -1000, -1000, -1000, 1705, 22187,
	-1000, -1000, 2644, -1000, 28811, 836, 2643, 50155, -1000, 443,
	443, 1995, 415, -16, -1000, -1000, -1000, -1000, 1026, 36171,
	-1000, -1000, -1000, -1000, -1000, 1878, 56043, -1000, -1000, 4212,
	54571, -1000, 2120, -1000, 1868, -1000, 2073, 22187, 2137, 778,
	54571, 511, 506, 503, -1000, -79, -1000, -1000, -1000, -1000,
	-1000, -1000, 982, 982, 982, -1000, 383, 2588, 5025, 7650,
	-1000, -1000, -1000, 49419, 2116, 54571, -1000, 2108, -1000, 1076,
	883, 871, 871, 54571, -1000, -1000, 55307, 54571, 1075, 1074,
	54571, 54571, 54571, 54571, -1000, 48683, -1000, 47947, 47211, 1348,
	54571, 46475, 45739, 45003, 44267, 43531, -1000, 2205, -1000, 2176,
	-1000, -1000, -1000, 55307, 54571, 54571, 55307, 54571, 55307, 56043,
	54571, -1000, -1000, 354, -1000, -1000, 1345, 1344, 1338, 982,
	982, 1337, 1815, 1783, 1768, 982, 982, 1332, 1719, 38379,
	1713, 302, 1331, 1328, 1318, 1363, 1711, 230, 1702, 1300,
	1287, 1307, 54571, 2107, 56043, -1000, 236, 960, 1049, 1019,
	2466, 2323, 1994, 466, 771, 54571, 432, 432, 54571, -1000,
	15545, 56043, 223, -1000, 1699, 22187, -1000, 1125, 1082, 1082,
	-1000, -1000, -1000, -1000, -1000, -1000, 1107, 56043, 1125, -1000,
	-1000, -1000, 1082, 1107, 56043, 1107, 1107, 1107, 1107, 1082,
	1082, 1082, 1107, 56043, 56043, 56043, 56043, 56043, 56043, 56043,
	56043, 56043, 14803, 972, 1107, -455, -1000, 1691, -1000, -1000,
	-1000, 2234, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14803, 14803, -1000, -1000, -1000, -1000, -1000, 1990,
	-1000, 173, 21, 174, -1000, 42795, 471, 1008, -1000, 471,
	-1000, -1000, -1000, 1989, 42059, -1000, -456, -462, -463, -465,
	-1000, -1000, -1000, -469, -472, -1000, -1000, -1000, 22187, 22187,
	22187, 22187, -279, -1000, 1289, 24395, 2394, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22187, 273, 1229, 24395, 24395, 24395,
	24395, 24395, 24395, 24395, 25867, 25131, 24395, 24395, 24395, 24395,
	24395, 24395, -1000, -1000, 33963, 8376, 8376, 908, 908, 908,
	908, -1000, -196, 1976, 55307, -1000, -1000, -1000, 833, 22187,
	22187, 908, -1000, 1358, 2001, 19243, 22187, 22187, 22187, 22187,
	1009, 1388, 55307, 22187, -1000, 1410, -1000, -1000, -1000, -1000,
	1221, -1000, -1000, 1140, 2371, 2371, 2371, 2371, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 2371, 22187,
	228, 228, 650, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 17771, 22187, 22187, 24395, 22187, 22187, 22187, 1410, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 1410, 22187,
	1534, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 17029, 22187,
	22187, 22187, 22187, 22187, -1000, -1000, -1000, -1000, -1000, -1000,
	22187, 22187, 22187, 22187, 22187, 22187, 22187, 22187, 1410, 22187,
	22187, 22187, 22187, 22187, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1559, 1634, 1606, 22187, -1000,
	1975, -1000, -192, 31019, 22187, 1672, 2637, 2159, 54571, -1000,
	-1000, -1000, -1000, 2521, -1000, 2521, 1559, 3602, 2263, 21451,
	-1000, -1000, 3602, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1754, -1000, 56043, 1972,
	2500, 54571, -1000, -372, -1000, -373, 2257, 1669, 364, -1000,
	22187, 22187, 1968, -1000, 1310, 56043, -1000, -279, -1000, 41323,
	-1000, -1000, 14061, 56043, 336, 56043, -1000, 30283, 40587, 328,
	-1000, -16, 1930, -1000, 4, 15, 18507, 899, -1000, -1000,
	-1000, 1020, 26603, 1837, 899, 95, -1000, -1000, -1000, 2073,
	-1000, 2073, 2073, 2073, 2073, 364, 364, 364, 364, -1000,
	-1000, -1000, -1000, -1000, 2104, 2102, -1000, 2073, 2073, 2073,
	2073, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2101, 2101,
	2101, 2100, 2100, 2074, 2074, 423, -1000, 22187, 418, 39851,
	2473, 1304, 1261, 236, 441, 2158, 54571, 54571, 54571, 441,
	-1000, 1528, 1526, 1478, -1000, -528, 1965, -1000, -1000, 2577,
	-1000, -1000, 1038, 1098, 1090, 1050, 54571, 210, 324, -1000,
	413, -1000, 39851, 54571, 1073, 871, 54571, -1000, 54571, -1000,
	-1000, -1000, -1000, -1000, 54571, -1000, -1000, 1962, -1000, 1986,
	1188, 1089, 1175, 1053, 1962, -1000, -1000, -206, 1962, -1000,
	1962, -1000, 1962, -1000, 1962, -1000, 1962, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1005, 114, -338, 54571,
	210, 463, -1000, 461, 33963, -1000, -1000, -1000, 33963, 33963,
	-1000, -1000, -1000, -1000, 1664, 1658, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -513, 56043, -1000, 225, 1004,
	315, 279, 286, 56043, 408, 2390, 2389, 2370, 2369, 2367,
	2348, 271, 294, 56043, 56043, 432, 2202, 56043, 2484, 56043,
	-1000, -1000, -1000, -1000, -1000, 1629, 1607, -1000, 1388, 56043,
	-1000, -1000, 1107, 1107, -1000, -1000, 56043, 1107, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1107, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56043, -1000, -1000, -1000, -1000, -48, 167, -1000,
	-1000, 54571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -117, -1000, 259, 10, 382, -1000, -1000, -1000, -1000,
	-1000, 2510, -1000, 1388, 1057, 1047, -1000, 2002, -1000, -1000,
	1298, -1000, -1000, -1000, -1000, -1000, 2002, 2002, 2002, -1000,
	-1000, -1000, -1000, -1000, 273, 24395, 24395, 24395, 1352, 481,
	1409, 1420, 1369, 1292, 1292, 994, 24395, 994, 24395, 901,
	901, 901, 901, 901, -1000, -1000, -1000, -1000, -1000, -1000,
	1599, -1000, 1598, -1000, 2002, 55307, 1863, 17029, 1977, 2570,
	1410, 919, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3498, 1410, 1884, 1410, 2298, 3486, 1036, -1000,
	22187, 1410, 3476, -1000, -1000, 1410, 1410, 22187, -1000, -1000,
	22187, 22187, 22187, 22187, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 22187, 1261, 1956, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1937, 2636, 1633, 1261, 1261,
	1261, 1261, 3469, 1261, 1261, 22187, 1272, -1000, -1000, -1000,
	1547, 3465, 1336, 3458, 1261, 1261, -1000, 1261, 3448, 3438,
	1410, 2579, 2555, 1261, 1261, 1261, 1261, 1261, 2551, 2539,
	1261, 1261, 2529, 1261, 3405, 1261, 2516, 2511, 2504, 2470,
	2444, 2440, 2435, 2417, 2400, 2341, 2336, 2326, 2274, 2266,
	2262, 2252, 2242, 2238, 1261, 1261, 1261, 3399, 1261, 3395,
	1261, 3389, 1261, 1261, 3378, 2232, 2226, 1410, 1931, -1000,
	3374, 1261, 3361, 3345, 3335, 2163, 3324, 3254, 3109, 1261,
	1261, 1261, 2157, 3077, 3050, 3046, 3034, 3026, 3007, 3002,
	2998, 2982, 1261, 1606, 1606, 1606, 1606, 1606, 2975, -313,
	1261, 1410, -1000, -1000, -1000, -1000, -1000, 2937, 2153, 2933,
	2923, 2913, 2873, 1410, 2002, 832, -1000, -1000, 1606, 1410,
	1410, 1606, 1606, 2850, 2814, 2810, 2750, 2697, 2687, 1261,
	1261, -1000, 1261, 2680, 2673, 2128, 2111, 1410, -1000, 1606,
	56043, -1000, -449, -1000, -26, 951, 2002, -1000, 38379, 1410,
	-1000, 6271, -1000, 1201, -1000, -1000, -1000, -1000, -1000, 35435,
	1939, -1000, -1000, -1000, -1000, 2002, 1836, -1000, -1000, -1000,
	-1000, 364, 76, 34699, 869, 869, 110, 1388, 1388, 22187,
	-1000, -1000, -1000, -1000, -1000, -1000, 829, 2602, 430, 2002,
	-1000, 1966, 2564, -1000, -1000, -1000, 2499, 28075, -1000, -1000,
	2002, 2002, 56043, 1938, 1935, -1000, 827, -1000, 1367, 1930,
	-16, 12, -1000, -1000, -1000, -1000, 1388, -1000, 1472, 338,
	360, -1000, 412, -1000, -1000, -1000, -1000, 2333, 90, -1000,
	-1000, -1000, 825, 364, -1000, -1000, -1000, -1000, -1000, -1000,
	1593, 1593, -1000, -1000, -1000, -1000, -1000, 1301, -1000, -1000,
	-1000, -1000, 1290, -1000, -1000, 1285, -1000, -1000, 2669, 2171,
	418, -1000, -1000, 982, 1579, -1000, -1000, 2340, 982, 982,
	54571, -1000, -1000, 1765, 2473, 225, 56043, 1037, 2200, -1000,
	2158, 2158, 2158, 56043, -1000, -1000, -1000, -1000, -1000, -1000,
	-517, 171, 587, -1000, -1000, -1000, 6505, 54571, 1808, -1000,
	207, -1000, 1758, -1000, 54571, -1000, 1806, 2095, 54571, 54571,
	-1000, -1000, -1000, 54571, 2002, -1000, -1000, -1000, -1000, 756,
	2465, 375, -1000, -1000, -358, -1000, -1000, 210, 207, 55307,
	54571, 899, -1000, -1000, -1000, -1000, -1000, -520, 1804, 496,
	212, 322, 56043, 56043, 56043, 56043, 56043, 56043, 801, -1000,
	-1000, 24, -1000, -1000, 193, -1000, -1000, -1000, -1000, -1000,
	193, -1000, -1000, -1000, -1000, -1000, 290, 456, -1000, 56043,
	56043, 923, -1000, -1000, -1000, -1000, -1000, 1082, -1000, -1000,
	1082, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2451, 56043, -6, -486, -1000, -482, 22187, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1197, 479, 1409, 24395, 24395,
	2001, 2001, 24395, -1000, -1000, -1000, 996, 996, 33963, -1000,
	24395, 22187, -1000, -1000, 22187, 22187, 22187, 995, -1000, 22187,
	1256, -1000, 22187, -1000, -313, 1606, 1261, 1261, 1261, 1261,
	-313, -313, -313, -313, -313, -313, -313, -313, -313, -313,
	1957, -1000, 22187, 22187, 22187, 1410, 305, -1000, -1000, -1000,
	-313, 22187, -1000, -1000, 2632, -1000, 22187, -1000, 33963, 22187,
	22187, 22187, -1000, -1000, -1000, 22187, 22187, -1000, -1000, 22187,
	-1000, 22187, -1000, -1000, -1000, -1000, -1000, -1000, 22187, -1000,
	22187, -1000, -1000, -1000, 22187, -1000, 22187, -1000, -1000, 22187,
	-1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187,
	-1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187,
	-1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187,
	-1000, 22187, -1000, 22187, -1000, -1000, -1000, 22187, -1000, 22187,
	-1000, 22187, -1000, -1000, 22187, -1000, 22187, -1000, 22187, -1000,
	22187, 22187, -1000, 22187, 22187, 22187, -1000, 22187, 22187, 22187,
	22187, -1000, -1000, -1000, -1000, 22187, 22187, 22187, 22187, 22187,
	22187, 22187, 22187, 22187, 22187, -1000, -1000, -1000, -1000, -1000,
	-1000, 22187, -1000, 39851, 3, -313, 1534, 3, 1534, 23659,
	840, 816, 22923, -1000, 22187, 16287, -1000, -1000, -1000, -1000,
	-1000, 22187, 22187, 22187, 22187, 22187, 22187, -1000, -1000, -1000,
	22187, 22187, -1000, 22187, -1000, 22187, -1000, -1000, -1000, -1000,
	-1000, 951, -1000, 848, 464, 871, 54571, -1000, -1000, -1000,
	-1000, 1929, -1000, 2522, -1000, 2291, 2279, 2627, 2602, 21451,
	-1000, 30283, -1000, -1000, 54571, -439, -1000, 2317, 2290, 869,
	869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13319, 2521,
	22187, 2198, 55307, 240, -1000, 29547, 54571, 55307, 30283, 30283,
	30283, 30283, 30283, -1000, 2228, 2224, -1000, 2225, 2168, 2213,
	56043, -1000, 1559, 1790, -1000, 22187, 32491, 1909, 30283, -1000,
	-1000, 30283, 56043, 12577, -1000, -1000, -12, -18, -1000, -1000,
	-1000, -1000, 1020, -1000, -1000, 1174, 2497, 2329, -1000, -1000,
	-1000, -1000, -1000, 1764, -1000, 1748, 1927, 1743, 1739, 114,
	-1000, 2080, 2415, 982, 982, -1000, 1284, -1000, 1358, 1573,
	1568, -1000, -1000, -1000, 465, -1000, 2483, 56043, 2195, 2189,
	2187, -1000, -536, 1283, 2093, 2068, 22187, 2079, 2560, 1893,
	54571, -1000, -1000, 55307, -1000, 288, -1000, 418, 54571, -1000,
	-1000, -1000, 324, 56043, -1000, 8431, -1000, -1000, -1000, 207,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56043, 250, -1000,
	2078, 1260, -1000, -1000, 2056, -1000, -1000, -1000, -1000, -1000,
	198, 188, 1566, 180, 1542, 180, -1000, 56043, 920, 2171,
	56043, -1000, -1000, -1000, 1107, 1107, -1000, -1000, 2412, -1000,
	1358, 1261, 24395, 24395, -1000, 908, -1000, -1000, 419, -260,
	2073, 2073, -1000, 2073, 2074, -1000, 2073, 155, 2073, 154,
	2073, -1000, -1000, 1410, 1410, -1000, 1606, 2075, 1302, 2659,
	-1000, 1388, 22187, 2655, -1000, -1000, -313, -313, -313, -313,
	-313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -91, 2626, 2614, 1261, -1000, 2055, 2053, -1000, 1261,
	22187, 1261, 1410, 2069, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 2059, 2047, 2040, 2009,
	1998, 1987, 1973, 1969, 1963, 1959, 1950, 1945, 1923, 1886,
	1839, 1834, 1261, 1261, 1818, 1261, 1792, 1771, -1000, 1388,
	1606, 2607, 1606, 1261, 1261, 2599, 309, 1261, 1737, 1737,
	1737, 1737, 1737, 1606, 1606, 1606, 1606, 1261, 54571, -1000,
	-313, -1000, -1000, -382, -386, -1000, 1410, -313, 1922, 24395,
	1261, 24395, 24395, 24395, 1261, 1410, -1000, 1767, 1757, 2583,
	1745, 1261, 2322, 1261, 1261, 1261, 1731, -1000, 2509, 2002,
	2509, 2002, 2509, 1727, 1201, 56043, -1000, -1000, -1000, -1000,
	2602, 2595, -1000, 1901, -1000, 76, 617, -1000, 2309, 2290,
	-1000, 2558, 2312, 2553, -1000, -1000, -1000, -1000, -1000, 1388,
	-1000, 2468, 1866, -1000, 999, 1926, -1000, -1000, 20715, 1733,
	2269, 826, 1727, 1961, 2564, 2154, 2186, 3062, -1000, -1000,
	-1000, -1000, 2214, -1000, 2089, -1000, -1000, 2024, -1000, 2063,
	336, 30283, 1958, 1958, -1000, 821, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1114, 8431, 2657, -1000, 1537, -1000, 1445,
	206, 1252, -1000, -1000, 982, 982, -1000, 1072, 1068, -1000,
	56043, 2052, -1000, 364, 1531, 364, 1250, -1000, -1000, 1227,
	-1000, -1000, -1000, -1000, 2042, 2188, -1000, -1000, -1000, -1000,
	56043, -1000, -1000, 56043, 56043, 56043, 2051, 2550, -1000, 22187,
	2050, 987, 2592, 54571, 54571, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 450, 982, -497, 293,
	292, 982, 982, 982, -539, -1000, -1000, 1707, 1697, -1000,
	-220, -1000, 22187, -1000, -1000, -1000, -1000, -1000, 1232, 1232,
	1522, 1485, 1483, -1000, 2024, -1000, -1000, -1000, 1734, -1000,
	-1000, -214, 54571, 54571, 54571, 54571, -1000, -1000, -1000, 1158,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 908, 1410, 329, -216, 1410, -1000, -1000, 364,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22187, -1000, 22187, -1000, 22187, 1388, 22187, -1000, -1000, -1000,
	-1000, -1000, 2521, 1480, 22187, 22187, -1000, 1226, 1224, -313,
	1261, -1000, -1000, -1000, 22187, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22187, -1000,
	22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000,
	22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000,
	22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000, 22187, -1000,
	-1000, 22187, -1000, -1000, -1000, 22187, -1000, 22187, -1000, 22187,
	-1000, -1000, -1000, 22187, 232, 996, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1410, 330, -1000,
	-1000, -1000, 2615, -1000, 1410, 22187, 2001, -1000, 2001, 2001,
	2001, -1000, -1000, -1000, 22187, -1000, 22187, 22187, -1000, 22187,
	-1000, 22187, -1000, -1000, -1000, -1000, 22187, 2002, 2299, 39115,
	2002, 39115, 2002, 32491, -1000, -1000, 2595, 2597, 2547, 2307,
	2310, 2310, 2309, -1000, 2542, 2538, -1000, 1466, 2536, 1464,
	1067, -1000, 55307, 22187, -1000, 240, 38379, -1000, 426, 54571,
	240, 54571, -1000, 2571, -1000, -1000, 22187, 2034, -1000, 22187,
	-1000, -1000, -1000, -1000, 8376, 2602, 1958, -1000, -1000, 915,
	-1000, 22187, -1000, 10910, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1461, 1442, -1000, -1000, 2026, 22187, -1000, -1000,
	-1000, 1728, 1677, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2024, -1000, -1000, -1000, -1000, 324, -530, 2574, 54571,
	1220, -1000, 1684, 1893, 319, 240, 1426, 982, 982, 982,
	1183, 1170, 38379, 1680, -1000, 54571, 402, -1000, 324, -1000,
	-251, -252, 1261, -1000, -1000, 2496, -1000, -1000, 16287, -1000,
	-1000, 2023, 2146, -1000, -1000, -1000, -1000, 2246, -204, -229,
	-1000, -1000, 1261, 1261, 1261, 1861, 1410, -1000, 1261, 1261,
	1618, 1554, -1000, -1000, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1606, 1661, -1000, 232, 1410, 2173,
	-1000, -1000, 8376, -1000, -1000, 2571, 2530, 3, -1000, -1000,
	237, 3, 1388, 1033, 1410, 1410, 1033, 1654, 1261, 1637,
	1615, 1261, 1261, 33227, -1000, 2524, 2523, 1668, -1000, -1000,
	39115, 1668, 39115, 951, 2597, -297, 22187, 22187, 2277, 1262,
	-1000, -1000, -1000, -1000, 1413, 1407, -1000, 1403, -1000, 2653,
	-1000, 1388, -1000, 2002, 240, -1000, 820, 1926, -1000, 2521,
	1388, 54571, 1388, 72, 2571, -1000, 1261, -1000, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, -1000,
	-1000, 54571, 2201, -1000, -1000, 2494, 1676, 165, -1000, 1520,
	1893, -1000, -1000, 272, -1000, 22187, -1000, 38379, 1382, 1371,
	-1000, -1000, -1000, -1000, -539, -1000, -1000, -1000, -1000, -1000,
	-1000, 436, 1890, -1000, 981, 54571, 56043, -1000, 2245, -1000,
	-1000, -1000, -1000, 22187, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22187, -1000, 1410, 2172, -1000, -374, -1000, -506, 22187,
	-313, -1000, -1000, -313, -1000, -1000, -1000, -1000, -1000, 22187,
	-1000, -1000, 22187, -1000, 22187, -1000, -1000, 1668, -1000, -1000,
	-1000, 37643, -1000, 1668, -1000, 1668, -1000, -297, -1000, 1888,
	-1000, 54571, 1388, 317, -1000, 1155, -1000, -1000, -1000, -1000,
	-1000, 55307, 54571, 1926, 54571, -1000, -1000, 1663, 1410, 2002,
	2521, -1000, 1651, -1000, 436, -1000, 2016, 2068, -1000, -1000,
	-1000, 19979, -1000, -1000, -1000, -1000, -1000, 260, -210, 16287,
	11835, 1617, -1000, -207, 1261, 1606, -1000, -474, -1000, -1000,
	-1000, -1000, 295, -1000, -1000, 1884, -1000, -1000, 1571, 1553,
	1519, -1000, -1000, -1000, -1000, -1000, -1000, -297, -1000, -1000,
	2489, -1000, -255, -1000, -1000, 1870, 1604, -1000, -1000, -1000,
	32491, 53835, -1000, -193, 407, -210, 22187, 2007, 1410, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -42, -1000, -1000,
	813, -1000, -1000, -1000, 2056, -219, -1000, -1000, -1000, 300,
	-489, -294, -303, 24395, -1000, 22187, -1000, 22187, -1000, 22187,
	-1000, 54571, 2002, -1000, -1000, -1000, 1578, -1000, 4080, -396,
	2170, -1000, -137, -1000, -1000, -1000, 1112, 1364, -1000, -1000,
	-1000, -1000, -1000, -1000, 1695, 54571, -1000, 410, -1000, -1000,
	15545, -214, -234, 1042, -1000, -1000, -1000, -1000, -1000, 2001,
	1477, 1349, 1261, -1000, 54571, -1000, 53835, -391, 899, 8376,
	-1000, 2167, 2162, 2612, -1000, -1000, -1000, -1000, -1000, -1000,
	-541, 1565, 245, -1000, -1000, -1000, 300, -312, -1000, 22187,
	-1000, 22187, -1000, 1410, -1000, -1000, 2482, 72, -1000, 2616,
	-1000, 2613, 964, 964, -1000, 1157, -541, -1000, -1000, -1000,
	-1000, 1261, 1261, -1000, -401, -1000, -1000, -1000, -1000, -1000,
	420, 1205, -1000, -1000, -1000, -1000, -1000, 8376, -1000, -1000,
	-1000, 213, 213, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3253, 3248, 25, 11, 42, 40, 3246, 3244, 3243,
	172, 3242, 3240, 3238, 3236, 3235, 3234, 2756, 2738, 2678,
	3233, 3229, 3227, 3214, 3213, 3212, 3211, 3210, 3209, 54,
	96, 32, 97, 216, 198, 3208, 171, 163, 193, 3198,
	3195, 3193, 115, 191, 82, 84, 192, 3192, 3191, 72,
	3189, 3186, 3184, 187, 186, 182, 1089, 3183, 179, 112,
	46, 3181, 3178, 3176, 3174, 3169, 3168, 3166, 3165, 3164,
	3163, 3162, 3157, 3145, 3134, 3132, 3131, 3127, 3125, 308,
	3124, 3123, 15, 3116, 74, 3115, 3111, 3109, 3108, 3102,
	8, 3101, 3100, 31, 34, 60, 3099, 3097, 45, 3096,
	3095, 3093, 3089, 3080, 78, 3079, 13, 3075, 29, 3072,
	3070, 126, 3069, 3065, 3063, 30, 3062, 3061, 3060, 16,
	168, 3059, 3058, 140, 3057, 3055, 3052, 173, 221, 3051,
	2273, 3049, 102, 3047, 3044, 3037, 164, 194, 3036, 123,
	3035, 3034, 3032, 152, 3031, 3285, 3028, 3025, 65, 75,
	188, 3023, 3022, 166, 70, 7, 3021, 19, 20, 3020,
	3018, 67, 69, 3017, 121, 3014, 3012, 101, 93, 3010,
	95, 100, 3008, 3007, 10, 5, 3005, 1, 6, 4,
	106, 2999, 2994, 116, 2993, 2990, 2989, 94, 2987, 2971,
	4547, 2970, 85, 130, 104, 68, 2962, 167, 142, 2958,
	2957, 2956, 2955, 2954, 2953, 51, 2950, 2948, 2947, 136,
	1269, 111, 2944, 150, 351, 52, 146, 2940, 195, 76,
	200, 177, 2938, 2933, 137, 134, 2932, 2930, 56, 165,
	197, 2929, 92, 129, 117, 183, 89, 133, 2928, 2921,
	59, 61, 2919, 2907, 2900, 2898, 170, 2897, 2896, 66,
	2894, 55, 2892, 199, 2891, 339, 91, 2890, 180, 161,
	2878, 62, 2875, 2873, 90, 98, 64, 27, 2872, 156,
	159, 128, 181, 2871, 2869, 53, 2868, 2867, 2866, 196,
	256, 2865, 2863, 319, 175, 143, 147, 83, 2860, 324,
	2857, 2856, 47, 4409, 6946, 189, 26, 158, 2855, 2853,
	7764, 48, 43, 12, 2849, 208, 2845, 205, 2844, 2839,
	2837, 206, 220, 110, 157, 58, 2836, 2835, 2829, 2828,
	41, 2825, 2821, 2817, 2816, 2815, 2807, 39, 38, 37,
	73, 211, 63, 23, 99, 169, 153, 71, 2805, 2804,
	2803, 125, 81, 2802, 155, 154, 124, 162, 2801, 178,
	144, 114, 2800, 105, 36, 2798, 2797, 2792, 2791, 87,
	2790, 2788, 2785, 2784, 149, 145, 119, 77, 2782, 80,
	113, 151, 148, 50, 2781, 44, 2778, 2775, 33, 190,
	28, 2774, 17, 109, 108, 2773, 6334, 2772, 14, 323,
	160, 2771, 2770, 9, 18, 21, 2764, 2763, 2762, 2757,
	131, 2749, 2744, 2742, 2740, 24, 49, 22, 2, 103,
	138, 79, 2726, 2707, 141, 2700, 2694, 2687, 0, 1040,
	127, 2685, 201,
}

//line sql.y:8711
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 386, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 420, 420, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 314, 314, 314, 22, 22, 22, 22,
	22, 129, 129, 388, 388, 387, 382, 382, 381, 381,
	380, 385, 385, 384, 384, 383, 40, 41, 50, 50,
	50, 50, 51, 52, 389, 389, 355, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 357, 357, 343, 343, 356, 356, 356,
	356, 356, 356, 356, 342, 342, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 404, 404, 404, 403, 403,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 405, 405, 405, 405, 320, 320, 320,
	320, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 324, 324, 324, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	326, 326, 326, 326, 326, 326, 326, 326, 341, 341,
	330, 330, 335, 335, 336, 336, 337, 337, 337, 338,
	338, 338, 339, 339, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 334, 334, 333, 333, 333, 344, 369,
	369, 368, 368, 366, 366, 366, 366, 366, 366, 366,
	366, 353, 353, 363, 363, 363, 363, 363, 352, 352,
	348, 348, 348, 349, 349, 350, 350, 347, 347, 351,
	351, 365, 365, 364, 364, 345, 345, 346, 346, 371,
	406, 406, 406, 406, 406, 407, 407, 372, 396, 398,
	398, 398, 397, 397, 394, 395, 393, 393, 393, 393,
	393, 84, 84, 84, 287, 287, 288, 288, 361, 361,
	360, 360, 360, 362, 362, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 282, 282, 282, 392,
	392, 392, 392, 392, 392, 391, 391, 391, 358, 358,
	358, 358, 390, 390, 59, 59, 219, 219, 409, 409,
	411, 411, 411, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 374, 374, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 340,
	340, 340, 373, 373, 375, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 377, 377, 377,
	63, 63, 378, 327, 328, 329, 5, 6, 354, 376,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 281, 281, 290,
	290, 280, 280, 305, 305, 305, 283, 283, 283, 284,
	284, 402, 402, 402, 277, 277, 66, 66, 66, 306,
	306, 306, 306, 69, 69, 412, 412, 413, 413, 414,
	414, 414, 70, 71, 71, 309, 309, 310, 310, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	110, 110, 110, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 399, 399, 400, 401,
	401, 401, 401, 76, 78, 27, 27, 27, 27, 27,
	27, 135, 135, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 130, 130, 130, 124, 124,
	421, 79, 80, 80, 128, 128, 128, 121, 121, 121,
	127, 127, 127, 12, 12, 13, 263, 263, 14, 14,
	134, 134, 133, 133, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 131, 131, 132, 132, 132,
	132, 298, 298, 298, 297, 297, 167, 167, 169, 168,
	168, 170, 170, 171, 171, 171, 171, 217, 217, 193,
	193, 256, 256, 257, 257, 255, 255, 262, 262, 258,
	258, 258, 258, 265, 265, 172, 172, 172, 172, 180,
	180, 181, 181, 182, 182, 308, 308, 303, 303, 303,
	302, 302, 186, 186, 186, 188, 187, 187, 187, 187,
	189, 189, 191, 191, 190, 190, 192, 197, 197, 196,
	196, 194, 194, 194, 194, 194, 194, 195, 195, 195,
	195, 198, 198, 145, 145, 145, 145, 145, 145, 145,
	145, 410, 410, 159, 159, 159, 159, 159, 159, 159,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 246, 246, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 222, 222, 221, 221, 87, 87, 87,
	88, 88, 89, 89, 89, 89, 89, 90, 90, 90,
	90, 90, 90, 90, 92, 92, 91, 91, 212, 212,
	295, 295, 93, 94, 94, 95, 95, 98, 98, 97,
	96, 96, 102, 102, 99, 99, 101, 101, 100, 103,
	103, 104, 105, 105, 278, 278, 199, 199, 208, 208,
	208, 208, 200, 200, 201, 201, 201, 201, 201, 201,
	209, 209, 209, 216, 210, 210, 206, 206, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 164, 164, 164, 164, 227, 227, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 152, 152, 165, 165, 165, 165, 166,
	166, 166, 166, 166, 166, 166, 316, 316, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 422, 422, 331, 331,
	331, 207, 207, 207, 207, 207, 126, 126, 126, 126,
	126, 313, 313, 313, 317, 317, 317, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 318, 318, 225, 225, 122, 122, 223, 223,
	224, 226, 226, 218, 218, 218, 218, 220, 220, 203,
	203, 203, 228, 228, 319, 319, 229, 229, 106, 107,
	107, 108, 108, 230, 230, 232, 231, 231, 233, 234,
	234, 234, 235, 235, 236, 236, 236, 49, 49, 49,
	49, 49, 44, 44, 44, 44, 45, 45, 45, 45,
	137, 137, 137, 137, 139, 139, 138, 138, 82, 82,
	83, 83, 83, 143, 143, 144, 144, 144, 141, 141,
	142, 142, 253, 253, 253, 253, 253, 253, 253, 237,
	237, 237, 244, 244, 244, 240, 240, 242, 242, 242,
	243, 243, 243, 241, 250, 250, 252, 252, 251, 251,
	247, 247, 248, 248, 249, 249, 249, 245, 245, 202,
	202, 202, 202, 202, 254, 254, 254, 254, 307, 307,
	307, 266, 266, 213, 213, 215, 215, 214, 214, 163,
	267, 267, 275, 272, 272, 273, 273, 299, 299, 299,
	276, 276, 289, 289, 285, 285, 286, 286, 279, 279,
	291, 291, 291, 77, 211, 211, 370, 370, 367, 294,
	294, 296, 296, 300, 300, 304, 304, 301, 301, 8,
	415, 415, 415, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 418,
	419, 311, 312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 5, 5, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 1, 1, 3, 4, 3, 4, 4, 4, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 1, 0, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 5, 6, 6, 6,
	6, 6, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 5, 7, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 4, 0, 2, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 3, 4, 2, 3, 4, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 3,
	1, 6, 5, 4, 1, 3, 3, 5, 0, 2,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -79, -421, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 12, 13, -109, -35, 34, -40,
	-50, 238, -51, -41, 239, -52, 241, 240, 278, 242,
	391, 271, 83, 327, 328, 330, 331, 332, 333, -110,
	698, 276, 277, 244, 38, 50, 35, 36, 39, 248,
	284, 285, 247, 144, -33, -36, 11, -418, 14, 481,
	273, 272, 30, -34, 591, 95, -80, -417, 746, -253,
	-237, 25, 35, 31, -236, -232, -128, -237, 23, 21,
	10, -79, -79, -79, 15, 16, -79, -355, -357, 95,
	171, 95, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -379, -46, -43, 243, 240, 288, 134, 135,
	278, 279, 280, 242, 262, 277, 281, 276, 297, -42,
	90, 35, 591, 594, -362, 239, 245, 246, 241, 482,
	137, 136, 84, -359, 386, 625, 716, -58, 718, 109,
	112, 717, 49, 252, 719, 720, 721, 632, 722, 261,
	723, 724, 725, 726, 732, 673, 733, 734, 735, 138,
	10, -79, -304, -300, 99, -293, 588, 264, 623, 435,
	624, 313, 90, 46, 41, 527, 598, 383, 386, 625,
	512, 716, 392, 327, 343, 337, 517, 518, 519, 366,
	358, 589, 626, 599, 316, 265, 301, 710, 356, 147,
	718, 320, 627, 279, 393, 394, 628, 395, 109, 330,
	432, 731, 319, 629, 729, 112, 717, 335, 88, 511,
	56, 713, 49, 274, 440, 441, 354, 247, 350, 719,
	302, 630, 601, 295, 137, 134, 738, 38, 346, 55,
	32, 728, 136, 54, 720, 162, 631, 721, 632, 397,
	373, 704, 53, 398, 280, 633, 93, 285, 593, 324,
	712, 399, 532, 347, 400, 312, 727, 244, 634, 323,
	693, 685, 686, 401, 402, 705, 378, 374, 379, 534,
	635, 424, 516, 403, 689, 690, 745, 57, 636, 637,
	706, 135, 638, 87, 722, 89, 341, 342, 639, 310,
	263, 537, 538, 426, 370, 494, 126, 501, 502, 119,
	120, 497, 121, 503, 122, 127, 504, 505, 506, 495,
	123, 116, 496, 507, 508, 371, 372, 124, 509, 118,
	117, 498, 500, 125, 510, 261, 37, 404, 590, 314,
	63, 318, 289, 427, 51, 376, 742, 50, 700, 539,
	640, 703, 369, 365, 491, 58, 641, 642, 643, 644,
	513, 723, 368, 340, 364, 737, 4, 307, 486, 514,
	724, 67, 246, 381, 380, 382, 296, 423, 361, 645,
	646, 647, 268, 91, 648, 351, 24, 649, 650, 405,
	303, 651, 61, 652, 653, 430, 277, 654, 59, 725,
	44, 655, 282, 739, 726, 656, 657, 658, 699, 659,
	284, 660, 407, 661, 687, 688, 406, 375, 377, 540,
	291, 408, 391, 249, 592, 662, 325, 345, 281, 730,
	663, 269, 528, 529, 530, 531, 711, 536, 535, 283,
	288, 276, 431, 270, 664, 665, 666, 667, 668, 317,
	684, 669, 670, 331, 596, 732, 492, 48, 671, 672,
	673, 674, 675, 311, 306, 425, 434, 66, 92, 388,
	676, 677, 709, 339, 336, 42, 304, 73, 472, 474,
	475, 476, 477, 478, 473, 480, 678, 328, 60, 733,
	734, 735, 298, 736, 520, 521, 522, 523, 12, 574,
	557, 585, 558, 575, 559, 568, 560, 576, 584, 586,
	541, 549, 542, 550, 580, 563, 577, 569, 562, 561,
	583, 566, 570, 543, 551, 581, 567, 544, 552, 545,
	553, 546, 554, 579, 578, 571, 582, 547, 555, 573,
	548, 556, 572, 564, 565, 443, 743, 744, 515, 410,
	138, 308, 309, 52, 362, 290, 679, 321, 680, 352,
	353, 488, 489, 367, 338, 363, 696, 329, 694, 292,
	411, 493, 278, 681, 433, 305, 384, 130, 389, 322,
	597, 533, 297, 412, 708, 595, 524, 525, 360, 357,
	299, 526, 682, 698, 413, 253, 293, 294, 683, 695,
	414, 415, 315, 416, 417, 418, 419, 420, 422, 326,
	421, 697, 691, 692, 300, 471, 594, 334, 355, 390,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 490, 251,
	-79, 251, -190, -300, -130, 700, 702, 190, -272, 394,
	-290, 396, 409, 404, 414, 402, -281, 405, 407, 291,
	-402, 424, 251, 411, 238, 397, 406, 415, 416, 315,
	422, 417, 326, 421, 300, 418, 419, 420, -386, 190,
	721, 736, 147, 359, 401, 399, 425, 700, 99, -306,
	99, 100, 101, -293, 329, -309, 334, -294, -386, -293,
	332, -79, -79, -311, -311, -130, -210, -145, 155, -159,
	-261, -162, 100, -150, -153, -204, -205, -206, -207, -160,
	-220, -259, 179, 180, 187, 156, -216, -163, 28, 587,
	483, 482, 190, 33, 233, 77, 78, 485, 486, 158,
	62, 14, 448, 449, -161, 438, 439, 450, 444, 445,
	511, 513, 514, 515, 512, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 516, 527, 488, 489, 128,
	490, 116, 118, 117, 126, 127, 491, 492, 493, 356,
	539, 540, 534, 537, 538, 536, 535, 371, 372, 494,
	557, 558, 562, 561, 559, 560, 563, 566, 567, 568,
	569, 570, 571, 573, 572, 564, 565, 542, 541, 543,
	544, 545, 546, 547, 548, 550, 549, 551, 552, 553,
	554, 555, 556, 574, 575, 576, 577, 578, 580, 579,
	584, 583, 581, 582, 586, 585, 495, 496, 119, 120,
	121, 122, 123, 124, 125, 497, 500, 498, 499, 501,
	502, 503, 508, 509, 504, 505, 506, 507, 510, 382,
	380, 381, 377, 376, 375, -89, -102, 614, 613, -103,
	435, 440, 441, 443, -151, -152, -165, -166, -294, -300,
	256, 437, 250, 185, 481, -154, -148, -218, 115, 101,
	-31, -214, 436, 446, 447, 451, 442, 452, 600, 602,
	617, 618, 620, 605, 610, 609, 612, 528, 529, 530,
	531, 532, 533, 685, 686, 687, 688, 689, 690, 691,
	692, -386, -293, 99, -157, -155, -199, 102, 107, 110,
	111, 113, -408, 274, 352, 353, 129, -418, 714, -156,
	104, 105, 106, 131, 132, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 98, 103, 49,
	410, 410, -190, -79, -79, -79, -79, -415, 717, 592,
	-230, -128, -232, -33, -31, -418, 11, -79, -31, -32,
	-30, -36, -38, 619, -37, -300, 108, -237, -253, 15,
	66, 174, 47, 55, -235, -236, -34, -31, -145, 22,
	40, 26, -132, 181, -145, -300, -132, -279, 255, -79,
	-79, -268, -314, 329, -270, 425, 700, 424, -260, -273,
	99, -259, -272, 423, 100, -356, 171, -342, -346, -294,
	266, -372, 262, -190, -365, -364, -294, -418, -129, -289,
	252, 260, 259, 148, -389, 151, 308, 437, 250, -53,
	-54, -55, -272, 189, 720, -111, 283, 287, 96, 96,
	-346, -345, -344, -390, 287, 266, -371, -363, 258, 267,
	-352, 259, 260, -347, 252, 149, -390, -347, 257, 267,
	262, 266, 287, 287, 138, 287, 138, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 282, -353, 163, -353,
	595, 595, -359, -390, 262, 252, -390, -390, 258, -291,
	-347, 254, 27, 254, 37, 37, -353, -353, -353, -272,
	189, -353, -353, -353, -353, 295, 295, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, 251, -389, -137, 421, 315, 90,
	-56, 297, -39, -190, -289, 252, 253, -389, 284, -190,
	234, 251, 703, -283, 171, 18, -283, -280, 410, 408,
	395, 400, -283, -283, -283, -283, 298, 393, -348, 252,
	37, 263, 410, 298, 393, 298, 299, 298, 299, 403,
	413, 298, -305, 17, 174, 437, 398, 402, 291, 251,
	292, 253, 412, 299, -305, 98, -284, 171, 298, 410,
	404, 294, -283, -283, -312, -418, -296, -294, -292, 243,
	40, 154, 27, 29, 157, 190, 141, 22, 158, 39,
	245, 359, 262, 189, 258, 482, 238, 81, 600, 438,
	445, 436, 444, 448, 484, 485, 437, 396, 33, 16,
	602, 30, 272, 26, 43, 183, 240, 161, 603, 275,
	28, 273, 128, 132, 605, 25, 84, 267, 17, 260,
	45, 19, 606, 607, 20, 74, 256, 255, 174, 252,
	79, 14, 233, 31, 170, 75, 608, 149, 144, 609,
	610, 611, 612, 142, 77, 171, 23, 740, 446, 447,
	35, 701, 587, 286, 185, 82, 64, 702, 155, 442,
	613, 614, 129, 615, 133, 85, 707, 151, 21, 80,
	47, 616, 287, 617, 257, 741, 618, 428, 619, 172,
	241, 481, 78, 173, 714, 620, 715, 250, 409, 11,
	487, 34, 271, 259, 72, 71, 140, 76, 452, 621,
	251, 160, 254, 143, 131, 10, 148, 36, 15, 83,
	86, 449, 450, 451, 62, 139, 591, 159, 18, 622,
	429, 153, -386, 703, -312, -312, 34, 100, -412, -413,
	-414, 591, 428, 254, -294, -190, -85, 693, 242, -86,
	699, 40, 249, -135, 410, -123, 190, 721, 704, 705,
	706, 703, 407, 711, 709, 707, 298, 708, 96, 151,
	153, 154, 4, -145, 170, -200, -201, 169, 163, 164,
	165, 166, 167, 168, 175, 174, 155, 157, 171, -246,
	152, 176, 177, 178, 179, 180, 181, 182, 184, 183,
	185, 186, 172, 173, 189, 236, 237, -153, -153, -153,
	-153, -216, -222, -221, -418, -218, -386, -293, -300, -418,
	-418, -153, -278, -418, -150, -418, -418, -418, -418, -418,
	-225, -145, -418, -418, -422, -418, -422, -422, -422, -331,
	-418, -331, -331, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, 234, -418,
	-418, -418, -418, -418, -331, -331, -331, -331, -331, -331,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 98, 111, 107, 110, 102, -220,
	113, 98, 98, 98, 98, -31, -32, -210, -418, -311,
	-399, -400, -193, -190, -418, 315, -294, -294, 284, 104,
	-235, -34, -31, -230, -236, -232, -31, -79, -121, -134,
	68, 69, -133, -136, 26, 43, 74, 76, 73, 71,
	72, 70, 40, -419, 97, -419, -253, -419, 96, -38,
	-256, 95, 647, 677, 647, 677, 66, 48, 98, 98,
	96, 24, -231, -233, -145, 17, -298, 4, -297, 27,
	-294, 98, 234, 17, -191, 31, -190, -279, -279, 96,
	99, 329, -269, -271, 426, 428, 163, -299, -294, 98,
	33, 97, 96, -190, -320, -323, -325, -324, -326, -321,
	-322, 356, 357, 190, 360, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 373, 34, 274, 352, 353, 354,
	355, 374, 375, 376, 377, 379, 380, 381, 382, 337,
	358, 589, 338, 339, 340, 341, 342, 343, 345, 346,
	349, 347, 348, 350, 351, -295, -294, 95, 97, 96,
	-330, 95, -145, -137, 251, -294, 252, 252, 252, -79,
	481, -353, -353, -353, 282, 22, -46, -43, -379, 21,
	-42, -43, 243, 134, 135, 240, 95, -342, 95, -351,
	-295, -294, 95, 149, 257, 148, -350, -347, -350, -351,
	-294, -218, -294, 149, 149, -294, -294, -265, -294, -265,
	-265, 40, -265, 40, -265, 40, 104, -294, -265, 40,
	-265, 40, -265, 40, -265, 40, -265, 40, 33, 87,
	88, 89, 33, 91, 92, 93, -218, -294, -294, -218,
	-342, -218, -190, -294, -272, 104, 104, 104, -353, -353,
	104, 98, 98, 98, -353, -353, 104, 98, -302, -300,
	98, 98, -391, 268, 312, 314, 104, 104, 104, 104,
	33, 98, -392, 33, 728, 727, 729, 730, 731, 98,
	104, 33, 104, 33, 104, -294, 95, -190, -143, 302,
	238, 240, 243, 85, 98, 318, 319, 316, 321, 322,
	323, 163, 49, 96, 254, 251, -294, -285, 256, -285,
	-294, -301, -300, -292, -190, 254, 392, 98, -145, -349,
	17, 174, -305, -305, -283, -190, -349, -305, -283, -190,
	-283, -283, -283, -283, -305, -305, -305, -283, -300, -300,
	-190, -190, -190, -190, -190, -190, -190, -312, -284, -283,
	703, 98, -277, 17, 85, -312, -312, 96, 335, 429,
	430, -310, 332, -81, -294, 98, -10, -29, -18, -17,
	-19, 163, -10, 96, 591, -183, -190, 703, 703, 703,
	703, 703, 703, -145, -145, -145, -145, 615, -208, -410,
	155, 131, 132, 129, 130, -162, 41, 42, 40, -145,
	-209, -214, -216, 114, 174, 157, 171, -246, -150, -153,
	-150, -150, -150, -150, -150, -150, 233, -150, 233, -150,
	-150, -150, -150, -150, -150, -313, -294, 98, 190, -158,
	-157, 113, -408, -158, 588, 96, -221, 234, -145, -145,
	-386, -119, 454, 455, 456, 457, 459, 460, 461, 464,
	465, 469, 470, 453, 471, 458, 463, 466, 467, 468,
	462, 355, -145, -211, -210, -211, -145, -145, -223, -224,
	159, -218, -145, -419, -419, 104, 181, -127, 26, 43,
	-127, -127, -127, -127, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -127, -145, -120, 453, 471, 458,
	463, 466, 467, 468, 462, 355, 472, 473, 474, 475,
	476, 477, 478, 479, 480, -120, -119, -145, -145, -145,
	-145, -145, -145, -145, -145, -87, -145, 141, 142, 143,
	-210, -145, -150, -145, -145, -145, -419, -145, -145, -145,
	-211, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -385, -384, -383,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -210, -210, -210, -210, -210, -145, -419,
	-145, -164, -148, 104, -261, 113, 100, -145, -145, -145,
	-145, -145, -145, -211, -296, -301, -292, -293, -210, -211,
	-211, -210, -210, -145, -145, -145, -145, -145, -145, -145,
	-145, -419, -145, -145, -145, -145, -145, -253, -419, -210,
	96, -401, 428, 429, 701, -303, 287, -302, 27, -211,
	98, 17, -263, 86, -294, -235, -235, 68, 69, 64,
	-131, -132, -136, -419, -37, 27, -255, -294, 640, 640,
	67, 98, -332, -272, 383, 384, 190, -145, -145, 96,
	-234, 29, 30, -190, -297, 181, -301, -190, -264, 287,
	-190, -168, -170, -171, -172, -193, -217, -418, -173, -31,
	611, 608, 17, -183, -184, -192, -300, -270, -314, -269,
	96, 427, 429, 430, 85, 133, -145, -333, 189, -361,
	-360, -359, -342, -344, -345, -346, 97, -333, -338, 389,
	388, -330, -330, -330, -330, -330, -332, -332, -332, -332,
	95, 95, -330, -330, -330, -330, -335, 95, -335, -335,
	-336, -335, 95, -336, -337, 95, -337, -372, -145, -369,
	-368, -366, -367, 261, 109, 683, 639, 591, 632, 673,
	86, -364, -234, 104, -419, -143, -286, 256, -370, -367,
	-294, -294, -294, -286, 99, 98, 99, 98, 99, 98,
	-112, -60, -1, 740, 741, 742, 96, 22, -343, -342,
	-59, 312, -375, -376, 287, -371, -365, -351, 149, -350,
	-351, -351, -294, 96, 31, 138, 138, 138, 138, 591,
	240, 34, -287, 631, 155, 683, 639, -342, -59, 254,
	254, -313, -313, -313, 98, 98, -282, 736, -183, -139,
	304, 163, 293, 293, 251, 306, 251, 306, -190, 317,
	320, 318, 319, 316, 321, 322, 323, 40, 40, 40,
	40, 40, 40, 305, 307, 309, 295, -190, -190, -285,
	85, -185, -190, 28, -300, 98, 98, -190, -283, -283,
	-190, -283, -283, -190, -414, 336, -294, 370, 694, 696,
	-123, 428, 96, 591, 25, -124, 25, -418, -410, 131,
	132, -216, -216, -216, -209, -150, -153, -150, 154, 275,
	-150, -150, -418, -218, -419, -296, 27, 96, 86, -419,
	179, 96, -419, -419, 96, 17, 96, -226, -224, 161,
	-145, -419, 96, -419, -419, -210, -145, -145, -145, -145,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-210, -419, 96, 96, 17, -317, 27, -419, -419, -419,
	-419, 96, -419, -419, -225, -419, 17, -419, 86, 96,
	174, 96, -419, -419, -419, 96, 96, -419, -419, 96,
	-419, 96, -419, -419, -419, -419, -419, -419, 96, -419,
	96, -419, -419, -419, 96, -419, 96, -419, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, -419, -419, 96, -419, 96,
	-419, 96, -419, -419, 96, -419, 96, -419, 96, -419,
	96, 96, -419, 96, 96, 96, -419, 96, 96, 96,
	96, -419, -419, -419, -419, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, -419, -419, -419, -419, -419,
	-419, 96, -94, 616, -419, -419, 96, -419, 96, 96,
	96, 96, 96, -419, -418, 234, -419, -419, -419, -419,
	-419, 96, 96, 96, 96, 96, 96, -419, -419, -419,
	96, 96, -419, 96, -419, 96, -419, -400, 700, 429,
	-197, -196, -194, 83, 255, 84, -418, -302, -419, -158,
	-261, -262, -261, -203, -294, 104, 113, -237, -167, 96,
	-169, 17, -216, 97, 96, -332, -241, -247, -280, -294,
	98, 190, -334, 190, -334, 383, 384, -233, 234, -198,
	18, -202, 34, 62, -29, -418, -418, 34, 96, -186,
	-188, -187, -189, 75, 79, 81, 76, 77, 78, 82,
	-308, 27, -31, -168, -31, -418, -190, -183, -420, 17,
	86, -420, 96, 234, -271, -274, 431, 428, 434, -386,
	98, -111, 96, -359, -346, -238, -140, 45, -339, 390,
	-332, 599, -332, -341, 98, -341, 104, 104, 104, 97,
	-49, -44, -45, 35, 90, -366, -353, 98, 44, -353,
	-353, -294, 97, -234, -139, -190, 155, 85, -370, -370,
	-370, -300, -2, 739, 745, 149, 95, 395, 21, -255,
	96, 97, -219, 313, 97, -113, -294, 97, 95, -351,
	-351, -294, -418, 251, 33, 33, 683, 639, 631, -59,
	-219, -218, -294, -333, 738, 737, 97, 253, 311, -144,
	448, -141, 98, 99, -190, -190, -190, -190, -190, -190,
	243, 240, 418, -409, 324, -409, 296, 254, -183, -190,
	96, -84, 270, 265, -305, -305, 35, -190, 428, 712,
	710, -145, 154, 275, -162, -153, -119, -119, -150, -315,
	190, 356, 274, 354, 350, 370, 361, 388, 352, 389,
	347, 346, 345, -315, -313, -150, -210, -145, -145, -145,
	162, -145, 160, -145, -95, -94, -419, -419, -419, -419,
	-419, -95, -95, -95, -95, -95, -95, -95, -95, -95,
	-95, -230, -145, -145, -145, -419, 190, 356, -95, -145,
	17, -145, -313, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -383, -145,
	-210, -145, -210, -145, -145, -145, -145, -145, -384, -384,
	-384, -384, -384, -210, -210, -210, -210, -145, -418, -294,
	-98, -97, -96, 666, 255, -94, -164, -98, -164, 233,
	-145, 233, 233, 233, -145, -211, -296, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -194, -347, 293,
	-347, 293, -347, -265, 96, -276, 25, 17, 62, 62,
	-167, -198, -132, -168, -294, -244, 693, -250, 51, -248,
	-249, 52, -245, 53, 61, -334, -334, 181, -235, -145,
	-266, 85, -267, -275, -218, -213, -215, -214, -418, -254,
	-419, -294, -265, -267, -170, -171, -171, -170, -171, 75,
	75, 75, 80, 75, 80, 75, -187, -300, -419, -145,
	-303, 86, -168, -168, -192, -300, 181, 428, 432, 433,
	-359, -407, 129, 155, 33, 85, 386, 109, -405, 189,
	628, 678, 683, 639, 632, 673, -406, 257, 148, 149,
	269, 27, 46, 97, 96, 97, 96, 97, 97, 96,
	-288, -287, -45, -44, -353, -353, 104, -386, 98, 98,
	253, 28, -190, 85, 85, 85, -114, 743, 104, 95,
	-3, 90, -145, 95, 22, -342, -218, -377, -327, -378,
	-328, -329, -5, -6, -354, -117, 62, 109, -63, 49,
	252, 723, 724, 138, -418, 736, -369, -255, -373, -375,
	-190, -149, -418, -161, -147, -146, -148, -154, 179, 180,
	274, 352, 353, -219, -190, -138, 302, 310, 95, -142,
	100, -388, 86, 293, 386, 293, 386, 98, -411, 325,
	98, -411, -190, -84, -49, -190, -283, -283, 35, -386,
	-419, -162, -153, -126, 174, 591, -318, 598, -330, -330,
	-330, -337, -330, 342, -330, 342, -330, -419, -419, -419,
	96, -419, 25, -419, 96, -145, 96, -95, -95, -95,
	-95, -95, -122, 487, 96, 96, -419, 95, 95, -419,
	-145, -419, -419, -419, 96, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, 96, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	-419, 96, -419, -419, -419, 96, -419, 96, -419, 96,
	-419, -419, -419, 96, -316, 684, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -93, -295, -94,
	648, 648, -419, -94, -227, 96, -150, -419, -150, -150,
	-150, -419, -419, -419, 96, -419, 96, 96, -419, 96,
	-419, 96, -419, -419, -419, -419, 96, -195, 25, -418,
	-195, -418, -195, -419, -261, -190, -198, -228, 19, -241,
	56, 362, -252, -251, 60, 52, -249, 22, 54, 22,
	32, -266, 96, 163, -307, 96, 27, -419, -419, 96,
	62, 234, -419, -198, -181, -180, 85, 86, -182, 85,
	-180, 75, 75, -256, 96, -264, -168, -198, -198, 234,
	129, -418, -149, 15, 98, 98, -386, -404, 727, 728,
	33, 104, -353, -353, 149, 149, -190, 95, -332, 98,
	-332, 104, 104, 33, 91, 92, 93, 33, 87, 88,
	89, -190, -190, -190, -190, -374, 95, 22, -145, 95,
	163, 97, -255, -255, 289, 174, -353, 721, 295, 295,
	-353, -353, -353, -116, -115, 743, 97, -419, 96, -340,
	591, 594, -145, -155, -155, -256, 97, -382, 591, -387,
	-294, -294, -294, -294, 104, 106, -419, 589, 82, 592,
	-419, -332, -145, -145, -145, -145, -235, 98, -145, -145,
	104, 104, -95, -419, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -210, -145, -419, -178, -177, -179,
	704, 129, 33, -315, -419, -212, 287, -101, -100, -99,
	17, -419, -145, -119, -119, -119, -119, -145, -145, -145,
	-145, -145, -145, -418, 75, 21, 19, -258, -294, 257,
	-418, -258, -418, -303, -228, -229, 20, 22, -242, 58,
	-240, 57, -240, -251, 22, 22, 98, 22, 98, 149,
	-275, -145, -215, -302, 62, -29, -294, -213, -294, -230,
	-145, 95, -145, -158, -198, -198, -145, -205, 511, 513,
	514, 515, 512, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 516, 527, 488, 489, 490, 116, 118,
	117, 126, 127, 491, 492, 493, 356, 539, 540, 534,
	537, 538, 536, 535, 371, 372, 494, 557, 558, 562,
	561, 559, 560, 563, 566, 567, 568, 569, 570, 571,
	573, 572, 564, 565, 542, 541, 543, 544, 545, 546,
	547, 548, 550, 549, 551, 552, 553, 554, 555, 556,
	574, 575, 576, 577, 578, 580, 579, 584, 583, 581,
	582, 586, 585, 495, 496, 119, 120, 121, 122, 123,
	124, 125, 497, 500, 498, 501, 502, 503, 508, 509,
	504, 505, 506, 507, 510, 382, 380, 381, 377, 376,
	375, 435, 440, 441, 443, 528, 529, 530, 531, 532,
	533, 685, 686, 687, 688, 689, 690, 691, 692, 98,
	98, 95, -145, 97, 97, -256, -373, -60, 97, -257,
	-255, 104, 97, 290, -214, -418, 98, -353, -353, -353,
	104, 104, -302, -419, 96, -294, -406, -375, 595, 595,
	-419, 27, -381, -380, -296, 95, 86, 67, 590, 593,
	-419, -419, -419, 96, -419, -419, -419, 97, 97, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, 96, -419, -177, -179, -419, 85, -158, -230, 22,
	-98, 312, 314, -98, -419, -419, -419, -419, -419, 96,
	-419, -419, 96, -419, 96, -419, -419, -258, -419, 22,
	22, 96, -419, -258, -419, -258, -197, -229, -108, -107,
	-106, 622, -145, -210, -243, 59, 85, 133, 98, 98,
	98, 15, -418, -213, 234, -307, -235, -255, -175, 395,
	-230, -419, -255, 97, 27, 97, 745, 149, 97, -214,
	-125, -418, 286, -302, 98, 98, -115, -118, -29, 96,
	163, -255, -190, 67, -145, -210, -419, 85, 603, 704,
	-92, -91, -88, 715, 741, -210, -94, -94, -145, -145,
	-145, -419, -294, 257, -419, -419, -108, 96, -105, -104,
	-294, -319, 591, 85, 133, -267, -255, -307, -294, 97,
	-419, -418, -235, 97, -239, -29, 95, -3, 286, -327,
	-378, -328, -329, -5, -6, -354, -82, 591, -380, -358,
	-300, -296, 98, 104, 97, 591, -419, -419, -90, 157,
	713, 681, -155, 233, -419, 96, -419, 96, -419, 96,
	-106, 96, 27, 596, -419, -303, -176, -174, -294, 645,
	-397, -396, 587, -407, -403, 129, 155, 109, -405, 683,
	639, 139, 140, -82, -145, 95, -419, -83, 301, 700,
	234, -388, 592, -90, 714, 659, 634, 659, 634, -150,
	-145, -145, -145, -104, -418, -419, 96, 25, -320, -62,
	656, -394, -395, 85, -398, 401, 655, 676, 129, 98,
	97, -255, 262, -301, -382, 593, 154, -119, -419, 96,
	-419, 96, -419, -93, -174, 652, -333, -158, -395, 85,
	-394, 85, 16, 15, -4, 744, 97, 303, -90, 659,
	634, -145, -145, -419, -61, 28, -175, -393, 270, 265,
	268, 34, -393, 104, -4, -419, -419, 656, 264, 33,
	129, -158, -178, -177, -177,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1635, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2271, 2271, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1640, 1493, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2269, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1502, 0, 78, 0, 0,
	884, 0, 0, 1618, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1620, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1520, 165, 1636, 1633, 1634, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 0,
	1612, 0, 720, 984, 0, 876, 877, 0, 786, 786,
	0, 786, 786, 786, 786, 0, 0, 0, 734, 0,
	0, 0, 0, 783, 0, 750, 751, 0, 783, 0,
	757, 789, 0, 0, 764, 786, 786, 767, 2272, 0,
	2272, 2272, 1603, 0, 780, 778, 792, 793, 42, 796,
	799, 800, 801, 802, 805, 0, 816, 819, 1629, 1630,
	0, 821, 826, 843, 844, 0, 45, 1144, 0, 1008,
	0, 1019, -2, 1030, 1047, 1048, 1049, 1050, 1051, 1053,
	1054, 1055, 0, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 1998, 1464,
	0, 0, 1426, 1426, 1160, 1426, 1426, 1428, 1428, 1428,
	1849, 1990, 1999, 2178, 1810, 1816, 1817, 1818, 2124, 2125,
	2126, 2127, 2216, 2217, 2221, 1912, 1805, 2191, 2192, 0,
	2268, 1951, 1959, 1960, 1936, 1945, 1984, 2086, 2201, 1828,
	1979, 2049, 1909, 1931, 1932, 2067, 2068, 1955, 1956, 1935,
	2130, 2132, 2148, 2149, 2134, 2136, 2145, 2151, 2156, 2135,
	2147, 2152, 2165, 2169, 2172, 2173, 2174, 2142, 2140, 2153,
	2157, 2159, 2161, 2167, 2170, 2143, 2141, 2154, 2158, 2160,
	2162, 2168, 2171, 2129, 2133, 2137, 2146, 2164, 2144, 2163,
	2138, 2150, 2155, 2166, 2139, 2131, 1949, 1952, 1939, 1940,
	1942, 1944, 1950, 1957, 1963, 1941, 1962, 1961, 0, 1937,
	1938, 1943, 1954, 1958, 1946, 1947, 1948, 1953, 1964, 2005,
	2004, 2003, 2048, 1975, 2047, 0, 0, 0, 0, 0,
	1799, 1854, 1855, 2175, 1348, 1349, 1350, 1351, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 1477, 1478, 44,
	1143, 1599, 1428, 1428, 1428, 1428, 1428, 1428, 1082, 1083,
	1084, 1085, 1086, 1112, 1113, 1119, 1120, 2062, 2063, 2064,
	2065, 1892, 2211, 1901, 1902, 2044, 2045, 1914, 1915, 2242,
	2243, -2, -2, -2, 232, 233, 234, 235, 236, 237,
	238, 239, 0, 1853, 2189, 2190, 228, 0, 0, 296,
	293, 294, 295, 1126, 1127, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 298, 299, 2271,
	0, 853, 0, 0, 0, 0, 0, 0, 1641, 1642,
	1502, 0, 1494, 1493, 63, 0, 880, -2, 0, 0,
	0, 0, 47, 0, 52, 941, 883, 77, 76, 1542,
	1545, 0, 0, 0, 59, 1503, 67, 69, 1504, 0,
	885, 886, 0, 917, 921, 0, 0, 0, 1619, 1618,
	1618, 102, 0, 0, 103, 123, 124, 125, 0, 0,
	109, 110, 1605, 1606, 43, 0, 0, 177, 178, 0,
	1100, 428, 0, 173, 0, 421, 360, 0, 1520, 0,
	0, 0, 0, 0, 880, 0, 1613, 154, 155, 162,
	163, 164, 401, 401, 401, 575, 0, 0, 165, 165,
	533, 534, 535, 0, 0, -2, 426, 0, 513, 0,
	0, 415, 415, 419, 417, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 402, 0,
	573, 574, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 550, 551, 0, 0, 0, 401,
	401, 0, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1533, 0, 0, 0,
	-2, 0, 712, 0, 0, 0, 1614, 1614, 0, 719,
	0, 0, 0, 724, 0, 0, 725, 0, 783, 783,
	781, 782, 727, 728, 729, 730, 786, 0, 0, 410,
	411, 412, 783, 786, 0, 786, 786, 786, 786, 783,
	783, 783, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2272, 789, 786, 0, 758, 0, 759, 760,
	761, 762, 765, 766, 768, 2273, 2274, 1631, 1632, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 2272, 2272, 772, 776, 1604, 798, 804, 806,
	807, 0, 0, 817, 820, 837, 49, 1900, 825, 49,
	827, 828, 829, 855, 856, 861, 0, 0, 0, 0,
	867, 868, 869, 0, 0, 872, 873, 874, 0, 0,
	0, 0, 0, 1006, 0, 0, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 1032, 0, 0, 0, 1056, 1057, 1058,
	1059, 1062, 0, 1073, 0, 1075, 1473, -2, 0, 0,
	0, 1067, 1068, 0, 0, 0, 1624, 1624, 0, 0,
	0, 1465, 0, 0, 1158, 0, 1159, 1161, 1162, 1163,
	0, 1164, 1165, 890, 890, 890, 890, 890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	1624, 1624, 0, 0, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 240, 241, 242, 243, 244,
	245, 300, 246, 247, 248, 1143, 0, 0, 0, 46,
	845, 846, 0, 967, 1624, 0, 0, 896, 0, 1639,
	57, 66, 68, 1502, 61, 1502, 0, 900, 0, 0,
	-2, -2, 901, 902, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 54, 2270, 55, 0, 74, 0, 48,
	0, 0, 1543, 0, 1546, 0, 0, 0, 374, 1550,
	0, 0, 1495, 1496, 1499, 0, 918, 1996, 922, 0,
	924, 925, 0, 0, 100, 0, 983, 0, 0, 0,
	111, 0, 113, 114, 0, 0, 0, 385, 1607, 1608,
	1609, -2, 408, 0, 385, 369, 308, 309, 310, 360,
	312, 360, 360, 360, 360, 374, 374, 374, 374, 343,
	344, 345, 346, 347, 0, 0, 329, 360, 360, 360,
	360, 350, 351, 352, 353, 354, 355, 356, 357, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 362, 362,
	362, 362, 362, 366, 366, 0, 1101, 0, 389, 0,
	1499, 0, 0, 1533, 1616, 1626, 0, 0, 0, 1616,
	132, 0, 0, 0, 576, 618, 527, 564, 577, 0,
	530, 531, -2, 0, 0, 512, 0, 514, 0, 409,
	0, -2, 0, 419, 0, 415, 419, 416, 419, 407,
	420, 554, 555, 556, 0, 558, 559, 648, 953, 0,
	0, 0, 0, 0, 654, 655, 656, 0, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 0, 0, 0,
	514, 0, 561, 0, 0, 465, 466, 467, 0, 0,
	470, 471, 472, 473, 0, 0, 476, 477, 478, 970,
	971, 479, 480, 505, 506, 507, 481, 482, 483, 484,
	485, 486, 487, 499, 500, 501, 502, 503, 504, 488,
	489, 490, 491, 492, 493, 496, 0, 147, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	899, 985, 1637, 1638, 721, 0, 0, 787, 788, 0,
	413, 414, 786, 786, 731, 773, 0, 786, 735, 774,
	736, 738, 737, 739, 752, 753, 786, 742, 784, 785,
	743, 744, 745, 746, 747, 748, 749, 769, 754, 755,
	756, 790, 0, 794, 795, 770, 771, 0, 0, 810,
	811, 0, 818, 840, 838, 839, 841, 833, 834, 835,
	836, 0, 842, 0, 0, 858, 96, 863, 864, 865,
	866, 878, 871, 1145, 1003, 1004, 1005, 0, 1007, 1013,
	0, 1128, 1130, 1011, 1012, 1015, 0, 0, 0, 1009,
	1020, 1140, 1141, 1142, 0, 0, 0, 0, 0, 1024,
	1028, 1033, 1034, 1035, 1036, 1037, 0, 1038, 0, 1041,
	1042, 1043, 1044, 1045, 1046, 1052, 1441, 1442, 1443, 1071,
	301, 302, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1144, 0, 1625, 0, 0, 0, 1471, 1468,
	0, 0, 0, 1427, 1429, 0, 0, 0, 891, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 0, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 1464, 0, 1077, 1078, 1079,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1352, 1353, 1354, 1355, 41, 0, 0, 0,
	0, 0, 0, 0, 1475, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 848, 849, 851, 0, 987, 0, 968, 0, 0,
	854, 0, 895, 0, 898, 60, 62, 904, 905, 0,
	926, 915, 903, 56, 51, 0, 0, 945, 1544, 1547,
	1548, 374, 1570, 0, 383, 383, 380, 1505, 1506, 0,
	1498, 1500, 1501, 79, 923, 919, 0, 1001, 0, 0,
	982, 0, 929, 931, 932, 933, 965, 0, 936, 937,
	0, 0, 0, 0, 0, 98, 984, 104, 0, 112,
	0, 0, 117, 118, 105, 106, 107, 108, 0, 607,
	-2, 460, 179, 181, 182, 183, 174, -2, 372, 370,
	371, 311, 374, 374, 337, 338, 339, 340, 341, 342,
	0, 0, 330, 331, 332, 333, 322, 0, 323, 324,
	325, 364, 0, 326, 327, 0, 328, 427, 0, 1507,
	390, 391, 393, 401, 0, 396, 397, 0, 401, 401,
	0, 422, 423, 0, 1499, 1524, 0, 0, 0, 1627,
	1626, 1626, 1626, 0, 167, 168, 169, 170, 171, 172,
	643, 0, 0, 619, 641, 642, 165, 0, 0, 175,
	516, 515, 0, 675, 0, 425, 0, 0, 419, 419,
	404, 405, 557, 0, 0, 650, 651, 652, 653, 0,
	0, 0, 543, 454, 0, 544, 545, 514, 516, 0,
	0, 385, 468, 469, 474, 475, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	593, 594, 597, 599, 518, 603, 605, 596, 598, 600,
	518, 604, 606, 1521, 1522, 1523, 0, 0, 713, 0,
	0, 451, 94, 1615, 718, 722, 723, 783, 741, 775,
	783, 733, 740, 763, 808, 809, 814, 822, 823, 824,
	862, 0, 0, 0, 0, 870, 0, 0, 1014, 1129,
	1131, 1016, 1017, 1018, 1021, 0, 1025, 1029, 0, 0,
	0, 0, 0, 1076, 1074, 1475, 0, 0, 0, 1125,
	0, 0, 1148, 1149, 0, 0, 0, 0, 1469, 0,
	0, 1156, 0, 1430, 1106, 0, 0, 0, 0, 0,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1493, 1183, 0, 0, 0, 0, 0, 1188, 1189, 1190,
	1106, 0, 1193, 1194, 0, 1196, 0, 1197, 0, 0,
	0, 0, 1204, 1205, 1207, 0, 0, 1210, 1211, 0,
	1213, 0, 1215, 1216, 1217, 1218, 1219, 1220, 0, 1222,
	0, 1224, 1225, 1226, 0, 1228, 0, 1230, 1231, 0,
	1233, 0, 1235, 0, 1238, 0, 1241, 0, 1244, 0,
	1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259, 0,
	1262, 0, 1265, 0, 1268, 0, 1271, 0, 1274, 0,
	1277, 0, 1280, 0, 1283, 1284, 1285, 0, 1287, 0,
	1289, 0, 1292, 1293, 0, 1295, 0, 1298, 0, 1301,
	0, 0, 1302, 0, 0, 0, 1306, 0, 0, 0,
	0, 1315, 1316, 1317, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 1330, 1331, 1332, 1333,
	1334, 0, 1336, 0, 1107, 0, 0, 1107, 0, 0,
	0, 0, 0, 1146, 1624, 0, 1431, 1432, 1433, 1434,
	1435, 0, 0, 0, 0, 0, 0, 1375, 1376, 1378,
	0, 0, 1381, 0, 1383, 0, 1598, 847, 850, 852,
	939, 988, 989, 0, 0, 0, 0, 969, 1623, 893,
	894, 897, 947, 0, 1479, 0, 0, 926, 1001, 0,
	927, 0, 53, 942, 0, 1552, 1551, 1564, 1577, 383,
	383, 377, 378, 384, 379, 381, 382, 1497, 0, 1502,
	0, 1591, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 972, 0, 0, 975, 0, 0, 0,
	0, 966, 937, 0, 938, 0, -2, 0, 0, 92,
	93, 0, 0, 0, 115, 116, 0, 0, 122, 386,
	387, 156, 165, 462, 180, 435, 0, 0, 307, 373,
	334, 335, 336, 0, 358, 0, 0, 0, 0, 456,
	128, 1511, 1510, 401, 401, 392, 0, 395, 0, 0,
	0, 1628, 361, 424, 0, 146, 0, 0, 0, 0,
	0, 152, 613, 0, 0, 620, 0, 0, 0, 525,
	0, 536, 537, 0, 647, -2, 709, 389, 0, 403,
	406, 954, 0, 0, 538, 0, 541, 542, 455, 516,
	547, 548, 562, 549, 497, 498, 495, 0, 0, 1534,
	1535, 1540, 1538, 1539, 133, 583, 585, 589, 584, 588,
	0, 0, 0, 520, 0, 520, 581, 0, 451, 1507,
	0, 717, 452, 453, 786, 786, 857, 97, 0, 860,
	0, 0, 0, 0, 1022, 1026, 1039, 1040, 1436, 1462,
	360, 360, 1449, 360, 366, 1452, 360, 1454, 360, 1457,
	360, 1460, 1461, 0, 0, 1069, 0, 0, 0, 0,
	1155, 1472, 0, 0, 1166, 1105, 1106, 1106, 1106, 1106,
	1106, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1466, 0, 0, 0, 1187, 0, 0, 1191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	0, 0, 0, 0, 0, 0, 1386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 1104,
	0, 1108, 1109, 0, 0, 1338, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 990, 997, 0,
	997, 0, 997, 0, 0, 0, 1610, 1611, 1480, 1481,
	1001, 1482, 916, 928, 946, 1570, 0, 1563, 0, -2,
	1572, 0, 0, 0, 1578, 375, 376, 920, 80, 1002,
	83, 0, 1591, 1600, 0, 1588, 1593, 1595, 0, 0,
	0, 1584, 0, 1001, 930, 961, 963, 0, 958, 973,
	974, 976, 0, 978, 0, 980, 981, 941, 935, 0,
	100, 0, 1001, 1001, 99, 0, 986, 119, 120, 121,
	461, 184, 189, 0, 0, 0, 194, 0, 196, 0,
	0, 0, 201, 202, 401, 401, 436, 0, 304, 306,
	0, 0, 187, 374, 0, 374, 0, 365, 367, 0,
	437, 457, 1508, 1509, 0, 0, 394, 398, 399, 400,
	0, 1617, 148, 0, 0, 0, 616, 0, 644, 0,
	0, 0, 0, 0, 0, 176, 517, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 0, 401, 0, 0,
	0, 401, 401, 401, 0, 701, 388, 0, 0, 672,
	669, 539, 0, 218, 219, 226, 227, 229, 0, 0,
	0, 0, 0, 546, 941, 1525, 1526, 1527, 0, 1537,
	1541, 136, 0, 0, 0, 0, 591, 595, 601, 0,
	519, 602, 714, 715, 716, 95, 726, 732, 859, 879,
	1010, 1023, 1027, 0, 0, 0, 0, 1463, 1447, 374,
	1450, 1451, 1453, 1455, 1456, 1458, 1459, 1065, 1066, 1070,
	0, 1152, 0, 1154, 0, 1470, 0, 1167, 1168, 1169,
	1170, 1171, 1502, 0, 0, 0, 1186, 0, 0, 1106,
	0, 1199, 1198, 1200, 0, 1202, 1203, 1208, 1209, 1212,
	1214, 1221, 1223, 1227, 1229, 1232, 1234, 1236, 0, 1239,
	0, 1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254,
	0, 1257, 0, 1260, 0, 1263, 0, 1266, 0, 1269,
	0, 1272, 0, 1275, 0, 1278, 0, 1281, 0, 1286,
	1288, 0, 1291, 1294, 1296, 0, 1299, 0, 1303, 0,
	1305, 1307, 1308, 0, 0, 0, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1335, 0, 1098, 1337,
	1110, 1111, 1116, 1340, 0, 0, 0, 1343, 0, 0,
	0, 1347, 1147, 1358, 0, 1363, 0, 0, 1369, 0,
	1373, 0, 1379, 1380, 1382, 1384, 0, 0, 0, 0,
	0, 0, 0, 967, 948, 64, 1482, 1486, 0, 1557,
	1555, 1555, 1565, 1566, 0, 0, 1573, 0, 0, 0,
	0, 84, 0, 0, 1579, 0, 0, 1596, 0, 0,
	0, 0, 101, 1493, 955, 962, 0, 0, 956, 0,
	957, 977, 979, 934, 0, 1001, 1001, 90, 91, 0,
	190, 0, 192, 0, 195, 197, 198, 199, 205, 206,
	207, 200, 0, 0, 303, 305, 0, 0, 348, 359,
	349, 0, 0, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 941, 149, 150, 151, 608, 0, 618, 0, 943,
	0, 611, 0, 528, 0, 0, 0, 401, 401, 401,
	0, 0, 0, 0, 686, 0, 0, 649, 0, 657,
	0, 0, 0, 230, 231, 0, 1536, 582, 0, 134,
	135, 0, 0, 587, 521, 522, 1063, 0, 0, 0,
	1064, 1448, 0, 0, 0, 0, 0, 1467, 0, 0,
	0, 0, 1192, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	638, 639, 0, 1387, 1103, 1493, 0, 1107, 1117, 1118,
	0, 1107, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 998, 0, 0, 0, 949, 950,
	0, 0, 0, 987, 1486, 1491, 0, 0, 1560, 0,
	1553, 1556, 1554, 1567, 0, 0, 1574, 0, 1576, 0,
	1601, 1602, 1594, 1589, 0, 1583, 1586, 1588, 1585, 1502,
	959, 0, 964, 0, 1493, 89, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 0, 0, 363, 368, 0, 0, 0, 609, 0,
	944, 621, 612, 0, 699, 0, 703, 0, 0, 0,
	706, 707, 708, 685, 0, 689, 429, 673, 670, 671,
	540, 0, 137, 138, 0, 0, 0, 1437, 0, 1440,
	1150, 1153, 1151, 0, 1182, 1184, 1185, 1445, 1446, 1201,
	1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1261, 1264,
	1267, 1270, 1273, 1276, 1279, 1282, 1290, 1297, 1300, 1304,
	1309, 0, 1312, 0, 0, 1313, 0, 640, 1094, 0,
	0, 1114, 1115, 0, 1342, 1344, 1345, 1346, 1359, 0,
	1364, 1365, 0, 1370, 0, 1374, 1385, 0, 992, 999,
	1000, 0, 995, 0, 996, 0, 940, 1491, 82, 1492,
	1489, 0, 1487, 1484, 1549, 0, 1558, 1559, 1568, 1569,
	1575, 0, 0, 1588, 0, 1582, 87, 0, 0, 0,
	1502, 191, 0, 210, 0, 617, 0, 620, 610, 697,
	698, 0, 710, 702, 704, 705, 687, -2, 1528, 0,
	0, 0, 590, 1438, 0, 0, 1314, 0, 636, 637,
	1102, 1095, 0, 1080, 1081, 1099, 1339, 1341, 0, 0,
	0, 991, 951, 952, 993, 994, 81, 0, 1488, 1122,
	0, 1483, 0, 1561, 1562, 1592, 0, 1581, 1587, 960,
	967, 0, 88, 442, 435, 1528, 0, 0, 0, 690,
	691, 692, 693, 694, 695, 696, 579, 1530, 139, 140,
	0, 509, 510, 511, 133, 0, 1157, 1310, 1096, 0,
	0, 0, 0, 0, 1360, 0, 1366, 0, 1371, 0,
	1490, 0, 0, 1485, 1590, 622, 0, 624, 0, -2,
	430, 443, 0, 185, 211, 212, 0, 0, 215, 216,
	217, 208, 209, 129, 0, 0, 711, 0, 1531, 1532,
	0, 136, 0, 0, 1087, 1088, 1089, 1090, 1092, 0,
	0, 0, 0, 1123, 1100, 623, 0, 0, 385, 0,
	633, 431, 432, 0, 438, 439, 440, 441, 213, 214,
	645, 0, 0, 508, 586, 1439, 0, 0, 1361, 0,
	1367, 0, 1372, 0, 625, 626, 634, 0, 433, 0,
	434, 0, 0, 0, 614, 0, 645, 1529, 1097, 1091,
	1093, 0, 0, 1121, 0, 635, 631, 444, 446, 447,
	0, 0, 445, 646, 615, 1362, 1368, 0, 448, 449,
	450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 156, 3, 3, 3, 184, 176, 3,
	95, 97, 181, 179, 96, 180, 234, 182, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 746,
	164, 163, 165, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 186, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 152, 3, 187,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 153, 154, 155,
	157, 158, 159, 160, 161, 162, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 177, 178, 183, 185,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:635
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:685
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:697
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:701
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:748
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:919
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:949
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:953
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:987
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:997
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1007
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1020
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1026
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1032
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1046
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1060
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1064
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1078
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1084
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1126
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1130
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1162
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1182
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1197
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1234
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1250
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1274
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1279
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1286
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1293
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1325
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1387
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1391
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1397
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1407
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1412
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1445
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1454
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1559
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1563
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1567
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1573
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1577
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1582
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1586
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1596
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2231
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2365
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2518
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2528
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2532
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2552
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2558
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2595
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2723
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2935
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2952
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3110
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3362
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3401
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3410
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3418
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3427
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3434
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3446
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3455
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3470
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3475
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3479
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3484
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3488
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3494
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3500
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3506
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3516
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3520
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3526
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3568
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3584
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3588
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3594
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3598
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3603
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3607
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3612
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3616
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3725
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3769
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3774
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3779
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3784
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3790
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3796
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3806
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3820
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3825
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3840
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3845
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3852
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3859
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3866
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3884
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3890
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3896
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3908
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3914
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3926
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3948
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4286
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4363
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4379
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4383
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4387
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4420
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4431
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4435
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4439
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4443
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4447
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4452
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4456
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4460
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4464
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4547
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4557
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4563
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4567
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4571
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4575
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4774
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4783
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = HighPriorityStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = StraightJoinHint
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = SQLBigResultStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4864
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4874
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4878
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4882
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4886
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4906
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4911
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4915
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4921
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4927
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4941
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4949
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4953
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4959
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4963
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4969
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4973
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4982
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4991
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4997
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5007
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5011
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5017
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5021
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5029
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5035
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5039
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5052
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5056
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5060
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5064
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5070
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5072
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5076
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5082
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5084
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5087
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5092
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5096
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5100
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5121
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5127
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5133
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5137
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5141
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5145
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5151
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5155
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5165
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5185
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5194
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5200
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5210
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5214
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5218
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5222
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5226
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5230
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5235
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5239
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5243
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5247
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5382
		{
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5559
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5563
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5569
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5579
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5583
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5587
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5593
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5597
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5604
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5608
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5612
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5616
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5620
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5626
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5630
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5634
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5638
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5642
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5646
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5650
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5659
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5665
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5669
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5678
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5683
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5693
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5699
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5703
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5709
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5725
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5731
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5735
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5741
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5745
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5751
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5755
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5767
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5773
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5777
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5783
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5789
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5793
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5799
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5803
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5809
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5813
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5820
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5824
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5828
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5832
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5838
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5842
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5848
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5852
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5856
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5860
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5864
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5868
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5874
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5878
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5882
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5889
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5895
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5899
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6893
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7029
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7033
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7037
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7041
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7045
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7049
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7059
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7063
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7067
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7085
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7089
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7093
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7099
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7103
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7107
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7111
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7115
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7121
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7129
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7153
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7157
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7161
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7165
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7195
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7199
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7226
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7231
		{
			yyVAL.str = string("")
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7235
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7241
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7245
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7251
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7260
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7266
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7270
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7274
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7278
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7284
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7288
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7294
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7316
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7335
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7341
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7347
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7351
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7360
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7369
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7375
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7381
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7385
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7391
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7396
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7400
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7404
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7413
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7419
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7423
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7427
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7436
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7440
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7444
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7448
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7455
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7459
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7463
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7467
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7473
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7477
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7481
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7485
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = ""
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7494
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7498
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7502
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7507
		{
			yyVAL.str = ""
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7526
		{
			yyVAL.str = ""
		}
	case 1529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7530
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7535
		{
			yyVAL.str = "cascaded"
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7539
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7543
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7552
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7558
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7564
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7570
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7579
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7583
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7588
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7598
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7602
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7606
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7610
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7614
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7618
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7622
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7628
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7632
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7636
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7645
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7649
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = ""
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7658
		{
			yyVAL.str = " header"
		}
	case 1557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = ""
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7667
		{
			yyVAL.str = " manifest on"
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7671
		{
			yyVAL.str = " manifest off"
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7676
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7680
		{
			yyVAL.str = " overwrite on"
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7684
		{
			yyVAL.str = " overwrite off"
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7690
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7695
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7699
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7709
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7715
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7719
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = ""
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7728
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7734
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7748
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7752
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = ""
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = " optionally"
		}
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7774
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7778
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7782
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7786
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7790
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7796
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7800
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7804
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7808
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7817
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7821
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7830
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7836
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7840
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7846
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7850
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7856
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7860
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7865
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7875
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7879
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7885
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7892
		{
			yyVAL.str = "charset"
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7902
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7906
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7910
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7939
		{
			yyVAL.empty = struct{}{}
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7941
		{
			yyVAL.empty = struct{}{}
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7943
		{
			yyVAL.empty = struct{}{}
		}
	case 1623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7947
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7956
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7963
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7967
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7973
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7977
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7984
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7990
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7994
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8000
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8004
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8011
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8017
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8023
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8027
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8031
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
		}
	case 2270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8691
		{
		}
	case 2271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8695
		{
			skipToEnd(yylex)
		}
	case 2272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8700
		{
			skipToEnd(yylex)
		}
	case 2273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8704
		{
			skipToEnd(yylex)
		}
	case 2274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8708
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
